{"version":3,"file":"437-437-9c3114270301411606a1.js","mappings":"+JAAA,IAAMA,EAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAI,UAAYF,EAAG,wEAAyE,GAAG,C,0RCO1H,IAAMG,GAASC,EAAAA,EAAAA,KACb,SAAAC,GAkBM,IAjBJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KAIeC,GAHVJ,EAALK,MACWL,EAAXM,YACQN,EAARO,SAAQP,EACRQ,QAAeR,EACfS,UAAAA,OAAQ,IAAAL,GAAQA,EAGhBM,GAHgBV,EAChBW,SAAgBX,EAChBY,SACKZ,EAALU,OACAG,EAAQb,EAARa,SACAC,EAAMd,EAANc,OAMMC,GALIf,EAAVgB,WACMhB,EAANiB,OACMjB,EAANkB,O,0WACOC,CAAAnB,EAAAoB,IAEcC,EAAAA,EAAAA,cACnB,SAAAC,GACET,EAASS,EAAEC,OAAOC,QACpB,GACA,CAACX,KAGH,OACEY,IAAAA,cAACC,EAAAA,EAAAA,MAAU,CACTC,UAAU,sBACV,qBAAoB1B,GAEpBwB,IAAAA,cAACC,EAAAA,EAAAA,MAAU,CAACE,KAAK,UACfH,IAAAA,cAACC,EAAAA,EAAAA,MAAAA,MAAgB,CACfb,SAAUE,EACVD,OAAQA,EACRL,SAAUA,EACVoB,UAAoB,MAATnB,IAEZR,GAASuB,IAAAA,cAACC,EAAAA,EAAAA,MAAAA,MAAgB,KAAExB,GAC5B4B,IAAWpB,KAAWqB,IAAUrB,IAC/Be,IAAAA,cAACC,EAAAA,EAAAA,QAAAA,SAAqB,CAACE,KAAK,WAAWlB,IAG1CP,GAAQsB,IAAAA,cAACC,EAAAA,EAAAA,KAAS,KAAEvB,GAG3B,GACA,CAAC,QAAS,UAEZT,EAAAA,EAAAA,GAAM,8BAEN,W","sources":["webpack:///./helpers/lf-log.js","webpack:///./react-bootstrap/toggle/index.js"],"sourcesContent":["const lfLog = s => console.log('%cLF%c ' + s, 'background: #3498ff; color: #ffffff; padding: 2px; border-radius: 3px', '');\n\nexport { lfLog };","import React, { useCallback } from 'react';\nimport _ from 'lodash';\nimport Form from 'react-bootstrap/Form';\n\nimport { I18N } from '../../components';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst Toggle = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    placeholder,\n    lfLocale,\n    tooltip = false,\n    disabled = false,\n    readOnly = false,\n    required = false,\n    error,\n    onChange,\n    onBlur,\n    appearance,\n    locale,\n    format,\n    ...rest\n  }) => {\n    const handleChange = useCallback(\n      e => {\n        onChange(e.target.checked);\n      },\n      [onChange]\n    );\n\n    return (\n      <Form.Group\n        className=\"lf-control-checkbox\"\n        data-lf-field-name={name}\n      >\n        <Form.Check type=\"switch\">\n          <Form.Check.Input\n            onChange={handleChange}\n            onBlur={onBlur}\n            disabled={disabled}\n            isInvalid={error != null}\n          />\n          {label && <Form.Check.Label>{label}</Form.Check.Label>}\n          {_.isString(error) && !_.isEmpty(error) && (\n            <Form.Control.Feedback type=\"invalid\">{error}</Form.Control.Feedback>\n          )}\n        </Form.Check>\n        {hint && <Form.Text>{hint}</Form.Text>}\n      </Form.Group>\n    );\n  },\n  ['label', 'hint']\n);\nlfLog('Loaded ReactBootrap.Toggle');\n\nexport default Toggle;\n"],"names":["lfLog","s","console","log","Toggle","I18N","_ref","name","label","hint","_ref$disabled","value","placeholder","lfLocale","tooltip","disabled","error","readOnly","required","onChange","onBlur","handleChange","appearance","locale","format","_objectWithoutProperties","_excluded","useCallback","e","target","checked","React","Form","className","type","isInvalid","_isString","_isEmpty"],"sourceRoot":""}