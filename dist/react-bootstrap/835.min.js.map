{"version":3,"file":"835-835-241df7e9bb2d9e331409.js","mappings":"+JAAA,IAAMA,EAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAI,UAAYF,EAAG,wEAAyE,GAAG,C,+QCO1H,IAAMG,GAAWC,EAAAA,EAAAA,KACf,SAAAC,GAiBM,IAhBJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MAEeC,GADJL,EAAXM,YAAWN,EACXO,QAAeP,EACfQ,UAAAA,OAAQ,IAAAH,GAAQA,EAGhBI,GAHgBT,EAChBU,SAAgBV,EAChBW,SACKX,EAALS,OACAG,EAAQZ,EAARY,SACAC,EAAMb,EAANa,OAOMC,GANId,EAAVe,WACMf,EAANgB,OACMhB,EAANiB,O,0WACOC,CAAAlB,EAAAmB,IAGcC,EAAAA,EAAAA,cACnB,SAAAC,GACET,EAASS,EAAEC,OAAOC,QACpB,GACA,CAACX,KAGH,OACEY,IAAAA,cAACC,EAAAA,EAAAA,MAAU,CACTC,UAAU,sBACV,qBAAoBzB,GAEpBuB,IAAAA,cAACC,EAAAA,EAAAA,MAAU,CAACE,KAAK,YACfH,IAAAA,cAACC,EAAAA,EAAAA,MAAAA,MAAgB,CACfb,SAAUE,EACVD,OAAQA,EACRL,SAAUA,EACVoB,UAAoB,MAATnB,EACXc,QAASnB,IAEVF,GAASsB,IAAAA,cAACC,EAAAA,EAAAA,MAAAA,MAAgB,KAAEvB,GAC5B2B,IAAWpB,KAAWqB,IAAUrB,IAC/Be,IAAAA,cAACC,EAAAA,EAAAA,QAAAA,SAAqB,CAACE,KAAK,WAAWlB,IAG1CN,GAAQqB,IAAAA,cAACC,EAAAA,EAAAA,KAAS,KAAEtB,GAG3B,GACA,CAAC,QAAS,UAEZT,EAAAA,EAAAA,GAAM,gCAEN,W","sources":["webpack:///./helpers/lf-log.js","webpack:///./react-bootstrap/checkbox/index.js"],"sourcesContent":["const lfLog = s => console.log('%cLF%c ' + s, 'background: #3498ff; color: #ffffff; padding: 2px; border-radius: 3px', '');\n\nexport { lfLog };","import React, { useCallback } from 'react';\nimport _ from 'lodash';\nimport Form from 'react-bootstrap/Form';\n\nimport { I18N } from '../../components';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst Checkbox = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    placeholder,\n    tooltip = false,\n    disabled = false,\n    readOnly = false,\n    required = false,\n    error,\n    onChange,\n    onBlur,\n    appearance,\n    locale,\n    format,\n    ...rest\n  }) => {\n\n    const handleChange = useCallback(\n      e => {\n        onChange(e.target.checked);\n      },\n      [onChange]\n    );\n\n    return (\n      <Form.Group\n        className=\"lf-control-checkbox\"\n        data-lf-field-name={name}\n      >\n        <Form.Check type=\"checkbox\">\n          <Form.Check.Input\n            onChange={handleChange}\n            onBlur={onBlur}\n            disabled={disabled}\n            isInvalid={error != null}\n            checked={value}\n          />\n          {label && <Form.Check.Label>{label}</Form.Check.Label>}\n          {_.isString(error) && !_.isEmpty(error) && (\n            <Form.Control.Feedback type=\"invalid\">{error}</Form.Control.Feedback>\n          )}\n        </Form.Check>\n        {hint && <Form.Text>{hint}</Form.Text>}\n      </Form.Group>\n    );\n  },\n  ['label', 'hint']\n);\nlfLog('Loaded ReactBootrap.Checkbox');\n\nexport default Checkbox;\n"],"names":["lfLog","s","console","log","Checkbox","I18N","_ref","name","label","hint","value","_ref$disabled","placeholder","tooltip","disabled","error","readOnly","required","onChange","onBlur","handleChange","appearance","locale","format","_objectWithoutProperties","_excluded","useCallback","e","target","checked","React","Form","className","type","isInvalid","_isString","_isEmpty"],"sourceRoot":""}