{"version":3,"file":"387-b647ce116345c3c55ca7.js","mappings":"+JAAA,IAAMA,EAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAI,UAAYF,EAAG,wEAAyE,GAAG,C,yHCSpHG,GAASC,EAAAA,EAAAA,KACb,SAAAC,GAeM,IAdJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAQL,EAARK,SACAC,EAAMN,EAANM,OAAMC,EAAAP,EACNQ,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAT,EAChBU,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAKX,EAALW,MACAC,EAAQZ,EAARY,SACAC,EAAWb,EAAXa,YACAC,EAAGd,EAAHc,IACAC,EAAGf,EAAHe,IACAC,EAAIhB,EAAJgB,KAGMC,GAAeC,EAAAA,EAAAA,cACnB,SAAAC,GACEd,EAASc,EAAEC,OAAOhB,MACpB,GACA,CAACC,IAGH,OACEgB,IAAAA,cAACC,EAAAA,EAAAA,MAAU,CACTC,UAAU,wBACV,qBAAoBtB,GAEpBoB,IAAAA,cAACC,EAAAA,EAAAA,MAAU,KACRpB,EACAU,GAAYS,IAAAA,cAACG,EAAAA,GAAY,OAE5BH,IAAAA,cAACC,EAAAA,EAAAA,MAAU,CACTrB,KAAMA,EACNwB,aAAcrB,EACdC,SAAUY,EACVH,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACNH,YAAaA,EACbP,OAAQA,EACRE,SAAUA,EACVE,SAAUA,EACVgB,UAAoB,MAATf,IAEZR,IAASQ,GAASU,IAAAA,cAACC,EAAAA,EAAAA,KAAS,KAAEnB,GAC9BwB,IAAWhB,KAAWiB,IAAUjB,IAC/BU,IAAAA,cAACC,EAAAA,EAAAA,QAAAA,SAAqB,CAACO,KAAK,WAAWlB,GAI/C,GACA,CAAC,QAAS,OAAQ,iBAEpBjB,EAAAA,EAAAA,GAAM,8BAEN,W","sources":["webpack:///./helpers/lf-log.js","webpack:///./react-bootstrap/slider/index.js"],"sourcesContent":["const lfLog = s => console.log('%cLF%c ' + s, 'background: #3498ff; color: #ffffff; padding: 2px; border-radius: 3px', '');\n\nexport { lfLog };","import React, { useCallback } from 'react';\nimport _ from 'lodash';\nimport Form from 'react-bootstrap/Form';\n\nimport { RequiredIcon, I18N } from '../../components';\nimport { lfLog } from '../../helpers/lf-log';\n\n// DOC: https://react-bootstrap.github.io/forms/form-control/#form-control-props\n\nconst Slider = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    onChange,\n    onBlur,\n    disabled = false,\n    readOnly = false,\n    error,\n    required,\n    placeholder,\n    min,\n    max,\n    step\n  }) => {\n\n    const handleChange = useCallback(\n      e => {\n        onChange(e.target.value);\n      },\n      [onChange]\n    );\n\n    return (\n      <Form.Group\n        className=\"lf-control-input-text\"\n        data-lf-field-name={name}\n      >\n        <Form.Label>\n          {label}\n          {required && <RequiredIcon />}\n        </Form.Label>\n        <Form.Range\n          name={name}\n          defaultValue={value}\n          onChange={handleChange}\n          min={min}\n          max={max}\n          step={step}\n          placeholder={placeholder}\n          onBlur={onBlur}\n          disabled={disabled}\n          readOnly={readOnly}\n          isInvalid={error != null}\n        />\n        {hint && !error && <Form.Text>{hint}</Form.Text>}\n        {_.isString(error) && !_.isEmpty(error) && (\n          <Form.Control.Feedback type=\"invalid\">{error}</Form.Control.Feedback>\n        )}\n      </Form.Group>\n    );\n  },\n  ['label', 'hint', 'placeholder']\n);\nlfLog('Loaded ReactBootrap.Slider');\n\nexport default Slider;"],"names":["lfLog","s","console","log","Slider","I18N","_ref","name","label","hint","value","onChange","onBlur","_ref$disabled","disabled","_ref$readOnly","readOnly","error","required","placeholder","min","max","step","handleChange","useCallback","e","target","React","Form","className","RequiredIcon","defaultValue","isInvalid","_isString","_isEmpty","type"],"sourceRoot":""}