{"version":3,"file":"362.index.js","mappings":"+JAAA,IAAMA,EAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAI,UAAYF,EAAG,wEAAyE,GAAG,C,sfCU1H,IAAMG,GAAWC,EAAAA,EAAAA,KACf,SAAAC,GAiBM,IAhBJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAQL,EAARK,SACAC,EAAMN,EAANM,OACAC,EAAIP,EAAJO,KAAIC,EAAAR,EACJS,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAV,EAChBW,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAKZ,EAALY,MACAC,EAAQb,EAARa,SACAC,EAAId,EAAJc,KACAC,EAAWf,EAAXe,YACAC,EAAKhB,EAALgB,MACAC,EAASjB,EAATiB,UACGC,E,kXAAIC,CAAAnB,EAAAoB,GAGDC,GAAeC,EAAAA,EAAAA,cACnB,SAAAC,GACElB,EAASkB,EAAEC,OAAOpB,MACpB,GACA,CAACC,IAGH,OACEoB,IAAAA,cAACC,EAAAA,EAAAA,MAAU,CACTC,UAAU,wBACV,qBAAoB1B,GAEpBwB,IAAAA,cAACC,EAAAA,EAAAA,MAAU,KACRxB,EACAW,GAAYY,IAAAA,cAACG,EAAAA,GAAY,OAE5BH,IAAAA,cAACC,EAAAA,EAAAA,QAAYG,EAAA,CACX5B,KAAMA,EACN6B,GAAG,WACHhB,KAAMA,EACNV,MAAOA,EACPC,SAAUgB,EACVd,KAAMA,EACNQ,YAAaA,EACbT,OAAQA,EACRG,SAAUA,EACVE,SAAUA,EACVoB,UAAoB,MAATnB,EACXoB,OAAOC,EAAAA,EAAAA,IAAehB,EAAWD,KAC7BkB,EAAAA,EAAAA,IAAShB,KAEdf,IAASS,GAASa,IAAAA,cAACC,EAAAA,EAAAA,KAAS,KAAEvB,GAC9BgC,IAAWvB,KAAWwB,IAAUxB,IAC/Ba,IAAAA,cAACC,EAAAA,EAAAA,QAAAA,SAAqB,CAACW,KAAK,WAAWzB,GAI/C,GACA,CAAC,QAAS,OAAQ,iBAEpBlB,EAAAA,EAAAA,GAAM,gCAEN,W","sources":["webpack:///./helpers/lf-log.js","webpack:///./react-bootstrap/textarea/index.js"],"sourcesContent":["const lfLog = s => console.log('%cLF%c ' + s, 'background: #3498ff; color: #ffffff; padding: 2px; border-radius: 3px', '');\n\nexport { lfLog };","import React, { useCallback } from 'react';\nimport _ from 'lodash';\nimport Form from 'react-bootstrap/Form';\n\nimport { RequiredIcon, I18N } from '../../components';\nimport { passRest, makeWidthStyle } from '../../helpers';\nimport { lfLog } from '../../helpers/lf-log';\n\n// DOC: https://react-bootstrap.github.io/forms/form-control/#form-control-props\n\nconst Textarea = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    onChange,\n    onBlur,\n    size,\n    disabled = false,\n    readOnly = false,\n    error,\n    required,\n    rows,\n    placeholder,\n    width,\n    fullWidth,\n    ...rest\n  }) => {\n\n    const handleChange = useCallback(\n      e => {\n        onChange(e.target.value);\n      },\n      [onChange]\n    );\n\n    return (\n      <Form.Group\n        className=\"lf-control-input-text\"\n        data-lf-field-name={name}\n      >\n        <Form.Label>\n          {label}\n          {required && <RequiredIcon />}\n        </Form.Label>\n        <Form.Control\n          name={name}\n          as=\"textarea\"\n          rows={rows}\n          value={value}\n          onChange={handleChange}\n          size={size}\n          placeholder={placeholder}\n          onBlur={onBlur}\n          disabled={disabled}\n          readOnly={readOnly}\n          isInvalid={error != null}\n          style={makeWidthStyle(fullWidth, width)}\n          {...passRest(rest)}\n        />\n        {hint && !error && <Form.Text>{hint}</Form.Text>}\n        {_.isString(error) && !_.isEmpty(error) && (\n          <Form.Control.Feedback type=\"invalid\">{error}</Form.Control.Feedback>\n        )}\n      </Form.Group>\n    );\n  },\n  ['label', 'hint', 'placeholder']\n);\nlfLog('Loaded ReactBootrap.Textarea');\n\nexport default Textarea;"],"names":["lfLog","s","console","log","Textarea","I18N","_ref","name","label","hint","value","onChange","onBlur","size","_ref$disabled","disabled","_ref$readOnly","readOnly","error","required","rows","placeholder","width","fullWidth","rest","_objectWithoutProperties","_excluded","handleChange","useCallback","e","target","React","Form","className","RequiredIcon","_extends","as","isInvalid","style","makeWidthStyle","passRest","_isString","_isEmpty","type"],"sourceRoot":""}