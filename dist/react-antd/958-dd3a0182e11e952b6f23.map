{"version":3,"file":"958-dd3a0182e11e952b6f23.js","mappings":"ijBAOA,IAAMA,EAAkB,SAAHC,GAYf,IAXJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MAAKC,EAAAL,EACLM,QAAAA,OAAO,IAAAD,GAAQA,EAAAE,EAAAP,EACfQ,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAKT,EAALS,MACAC,EAASV,EAATU,UACAC,EAAKX,EAALW,MACAC,EAAQZ,EAARY,SACGC,E,kXAAIC,CAAAd,EAAAe,GAGHC,EAAeC,IAAMb,GAKzB,OAJIY,GAAgBJ,IAClBI,EAAeA,EAAaE,OAAON,IAInCO,IAAAA,cAACC,IAAAA,KAAS,CACRlB,MAAOA,EAGP,qBAAoBD,EACpBoB,KAAe,MAATZ,EAAgBA,EAASN,IAASG,EAAUH,OAAOmB,EACzDd,SAAUA,EACVF,QAASA,GAAWH,EACpBoB,YAAsB,MAATd,EACbe,eAAgBf,EAAQ,aAASa,GAEjCH,IAAAA,cAACM,IAAUC,EAAA,CACTC,IAAG,GAAAC,OAAK3B,EAAI,KAAA2B,OAAIhB,QAAAA,EAAY,IAC5BI,aAAcA,EACda,OAAOC,EAAAA,EAAAA,IAAepB,EAAWC,KAC7BoB,EAAAA,EAAAA,IAASlB,KAIrB,C,8XCtCA,IAAMmB,GAAWC,EAAAA,EAAAA,IACf,SAAAjC,GAIM,IAGAkC,EANJC,EAAQnC,EAARmC,SACA/B,EAAKJ,EAALI,MACGS,E,kXAAIC,CAAAd,EAAAe,GAKP,GAAIqB,IAAShC,GACX8B,EAAe9B,OACV,GAAIiC,IAAWjC,GAAQ,CAC5B,IAAMkC,EAAI,IAAIC,KAAKnC,IACfoC,EAAAA,EAAAA,GAAYF,KACdJ,EAAeI,EAEnB,CAGA,IAAMG,GAAeC,EAAAA,EAAAA,cACnB,SAAAJ,IACME,EAAAA,EAAAA,GAAYF,IACdH,EAASG,EAAEK,cAEf,GACA,CAACR,IAGH,OACEhB,IAAAA,cAACpB,EAAAA,EAAe2B,EAAA,CACdtB,MAAO8B,EACPU,UAAU,WACVT,SAAUM,GACN5B,EAAI,CACRgC,UAAU,IAGhB,GACA,CAAC,QAAS,OAAQ,iBAEpBC,EAAAA,EAAAA,GAAM,wBAEN,W","sources":["webpack:///./components/antd-generic-date/index.js","webpack:///./react-antd/datetime/index.js"],"sourcesContent":["import React from 'react';\nimport Form from 'antd/lib/form';\nimport DatePicker from 'antd/lib/date-picker';\nimport dayjs from 'dayjs';\n\nimport { passRest, makeWidthStyle } from '../../helpers';\n\nconst AntdGenericDate = ({\n  name,\n  label,\n  hint,\n  value,\n  tooltip = false,\n  required = false,\n  error,\n  fullWidth,\n  width,\n  lfLocale,\n  ...rest\n}) => {    \n  // set locale for dates\n  let defaultValue = dayjs(value);\n  if (defaultValue && lfLocale) {\n    defaultValue = defaultValue.locale(lfLocale);\n  }\n\n  return (\n    <Form.Item\n      label={label}\n      // not needed, breaks in case date is set\n      //name={name}\n      data-lf-field-name={name}\n      help={error != null ? error : (hint && !tooltip ? hint : undefined)}\n      required={required}\n      tooltip={tooltip && hint}\n      hasFeedback={error != null}\n      validateStatus={error ? 'error': undefined}\n    >\n      <DatePicker\n        key={`${name}-${lfLocale ?? ''}`} // add key or will not re-render if locale is changed\n        defaultValue={defaultValue}\n        style={makeWidthStyle(fullWidth, width)}\n        {...passRest(rest)}\n      />\n    </Form.Item>\n  );\n};\n\nexport { AntdGenericDate };\n","import React, { useCallback } from 'react';\nimport _ from 'lodash';\n\nimport { I18N } from '../../components/i18n';\nimport { AntdGenericDate } from '../../components/antd-generic-date';\nimport { lfLog } from '../../helpers/lf-log';\nimport { isValidDate } from '../../helpers/is-valid-date';\n\nconst Datetime = I18N(\n  ({\n    onChange,\n    value,\n    ...rest\n  }) => {\n\n    // also accepts string dates\n    let currentValue;\n    if (_.isDate(value)) {\n      currentValue = value;\n    } else if (_.isString(value)) {\n      const d = new Date(value);\n      if (isValidDate(d)) {\n        currentValue = d;\n      }\n    }\n\n    // send always date string in iso format\n    const handleChange = useCallback(\n      d => {\n        if (isValidDate(d)) {\n          onChange(d.toISOString());\n        }\n      },\n      [onChange]\n    );\n\n    return (\n      <AntdGenericDate\n        value={currentValue}\n        component=\"datetime\"\n        onChange={handleChange}\n        {...rest}\n        showTime={true}\n      />\n    );\n  },\n  ['label', 'hint', 'placeholder']\n);\nlfLog('Loaded AntD.DateTime');\n\nexport default Datetime;\n"],"names":["AntdGenericDate","_ref","name","label","hint","value","_ref$tooltip","tooltip","_ref$required","required","error","fullWidth","width","lfLocale","rest","_objectWithoutProperties","_excluded","defaultValue","dayjs","locale","React","Form","help","undefined","hasFeedback","validateStatus","DatePicker","_extends","key","concat","style","makeWidthStyle","passRest","Datetime","I18N","currentValue","onChange","_isDate","_isString","d","Date","isValidDate","handleChange","useCallback","toISOString","component","showTime","lfLog"],"sourceRoot":""}