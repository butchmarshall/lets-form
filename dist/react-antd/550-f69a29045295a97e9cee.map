{"version":3,"file":"550-f69a29045295a97e9cee.js","mappings":"qrBAQA,IAAMA,GAASC,EAAAA,EAAAA,KACb,SAAAC,GAyBM,IAxBJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAIL,EAAJK,KAESC,GADEN,EAAXO,YACSP,EAATQ,UAASR,EACTS,SAAAA,OAAO,IAAAH,GAAQA,EAAAI,EAAAV,EACfW,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAZ,EAChBa,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAd,EAChBe,SAAAA,OAAQ,IAAAD,GAAQA,EAEhBE,GADShB,EAATiB,UACKjB,EAALgB,OAMAE,GALMlB,EAANmB,OACQnB,EAARoB,SACOpB,EAAPqB,QACUrB,EAAVsB,WACQtB,EAARuB,SACQvB,EAARkB,UACAM,EAAMxB,EAANwB,OAEAC,GADKzB,EAAL0B,MACe1B,EAAfyB,iBACAE,EAAiB3B,EAAjB2B,kBACGC,E,kXAAIC,CAAA7B,EAAA8B,GAEDC,GAAeC,EAAAA,EAAAA,cACnB,SAAAC,GAAO,OAAIf,EAASe,EAAQ,GAC5B,CAACf,IAGH,OACEgB,IAAAA,cAACC,IAAAA,KAAS,CACR,qBAAoBlC,EACpBmC,UAAU,oBACVlC,MAAOA,EACPD,KAAMA,EACNoC,KAAe,MAATrB,EAAgBA,EAASb,IAASM,EAAUN,OAAOmC,EACzDvB,SAAUA,EACVN,QAASA,GAAWN,EACpBoC,YAAsB,MAATvB,EACbwB,eAAgBxB,EAAQ,aAASsB,GAEjCJ,IAAAA,cAACO,IAAMC,EAAA,CACLC,eAAgBvC,EAChBS,SAAUA,EACVK,SAAUa,EACVP,OAAQA,EACRb,SAAUA,EACVN,KAAMA,EACNoB,gBAAiBA,EACjBE,kBAAmBA,IACfiB,EAAAA,EAAAA,IAAShB,KAIrB,GACA,CAAC,QAAS,OAAQ,kBAAmB,uBAEvCiB,EAAAA,EAAAA,GAAM,sBAEN,W","sources":["webpack:///./react-antd/toggle/index.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport Form from 'antd/lib/form';\nimport Switch from 'antd/lib/switch';\n\nimport { I18N } from '../../components';\nimport { passRest } from '../../helpers';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst Toggle = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    size,\n    placeholder,\n    showCount,\n    tooltip = false,\n    disabled = false,\n    readOnly = false,\n    required = false,\n    maxLength,\n    error,\n    prefix,\n    lfLocale,\n    postfix,\n    allowClear,\n    bordered,\n    onChange,\n    onBlur,\n    width,\n    checkedChildren,\n    unCheckedChildren,\n    ...rest\n  }) => {\n    const handleChange = useCallback(\n      checked => onChange(checked),\n      [onChange]\n    );\n\n    return (\n      <Form.Item\n        data-lf-field-name={name}\n        className=\"lf-control-toggle\"\n        label={label}\n        name={name}\n        help={error != null ? error : (hint && !tooltip ? hint : undefined)}\n        required={required}\n        tooltip={tooltip && hint}\n        hasFeedback={error != null}\n        validateStatus={error ? 'error': undefined}\n      >\n        <Switch\n          defaultChecked={value}\n          readOnly={readOnly}\n          onChange={handleChange}\n          onBlur={onBlur}\n          disabled={disabled}\n          size={size}\n          checkedChildren={checkedChildren}\n          unCheckedChildren={unCheckedChildren}\n          {...passRest(rest)}\n        />\n      </Form.Item>\n    );\n  },\n  ['label', 'hint', 'checkedChildren', 'unCheckedChildren']\n);\nlfLog('Loaded AntD.Toggle');\n\nexport default Toggle;\n"],"names":["Toggle","I18N","_ref","name","label","hint","value","size","_ref$tooltip","placeholder","showCount","tooltip","_ref$disabled","disabled","_ref$readOnly","readOnly","_ref$required","required","error","maxLength","onChange","prefix","lfLocale","postfix","allowClear","bordered","onBlur","checkedChildren","width","unCheckedChildren","rest","_objectWithoutProperties","_excluded","handleChange","useCallback","checked","React","Form","className","help","undefined","hasFeedback","validateStatus","Switch","_extends","defaultChecked","passRest","lfLog"],"sourceRoot":""}