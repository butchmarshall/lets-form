{"version":3,"file":"845-70abdf4136797ba56f17.js","mappings":"4bAOA,IAAMA,GAAeC,EAAAA,EAAAA,KACnB,SAAAC,GAwBM,IAvBJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MAGSC,GAFLL,EAAJM,KACWN,EAAXO,YACSP,EAATQ,UAASR,EACTS,SAAAA,OAAO,IAAAJ,GAAQA,EAAAK,EAAAV,EACfW,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAZ,EAChBa,SAAAA,OAAQ,IAAAD,GAAQA,EAGhBE,GAHgBd,EAChBe,SACSf,EAATgB,UACKhB,EAALc,OAKAG,GAJMjB,EAANkB,OACOlB,EAAPmB,QACUnB,EAAVoB,WACQpB,EAARqB,SACQrB,EAARiB,UACAK,EAAMtB,EAANsB,OAMMC,GALDvB,EAALwB,MACexB,EAAfyB,gBACiBzB,EAAjB0B,kB,0WACOC,CAAA3B,EAAA4B,IAEcC,EAAAA,EAAAA,cACnB,SAAAC,GAAC,OAAIb,EAASa,EAAEC,OAAOC,QAAQ,GAC/B,CAACf,KAGH,OACEgB,IAAAA,cAACC,IAAAA,KAAS,CACRjC,KAAMA,EACNkC,UAAU,sBACV,qBAAoBlC,EACpBmC,KAAe,MAATtB,EAAgBA,EAASX,IAASM,EAAUN,OAAOkC,EACzDC,YAAsB,MAATxB,EACbyB,eAAgBzB,EAAQ,aAASuB,GAEjCJ,IAAAA,cAACO,IAAQ,CACP3B,SAAUA,EACVI,SAAUM,EACVD,OAAQA,EACRU,QAAS5B,EACTO,SAAUA,GAETT,GAIT,GACA,CAAC,QAAS,OAAQ,iBAEpBuC,EAAAA,EAAAA,GAAM,wBAEN,W","sources":["webpack:///./react-antd/checkbox/index.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport Form from 'antd/lib/form';\nimport Checkbox from 'antd/lib/checkbox';\n\nimport { I18N } from '../../components';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst CheckboxAntd = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    size,\n    placeholder,\n    showCount,\n    tooltip = false,\n    disabled = false,\n    readOnly = false,\n    required = false,\n    maxLength,\n    error,\n    prefix,\n    postfix,\n    allowClear,\n    bordered,\n    onChange,\n    onBlur,\n    width,\n    checkedChildren,\n    unCheckedChildren,\n    ...rest\n  }) => {\n    const handleChange = useCallback(\n      e => onChange(e.target.checked),\n      [onChange]\n    );\n\n    return (\n      <Form.Item\n        name={name}\n        className=\"lt-control-checkbox\"\n        data-lf-field-name={name}\n        help={error != null ? error : (hint && !tooltip ? hint : undefined)}\n        hasFeedback={error != null}\n        validateStatus={error ? 'error': undefined}\n      >\n        <Checkbox\n          readOnly={readOnly}\n          onChange={handleChange}\n          onBlur={onBlur}\n          checked={value}\n          disabled={disabled}\n        >\n          {label}\n        </Checkbox>\n      </Form.Item>\n    )\n  },\n  ['label', 'hint', 'placeholder']\n);\nlfLog('Loaded AntD.Checkbox');\n\nexport default CheckboxAntd;\n"],"names":["CheckboxAntd","I18N","_ref","name","label","hint","value","_ref$tooltip","size","placeholder","showCount","tooltip","_ref$disabled","disabled","_ref$readOnly","readOnly","error","required","maxLength","onChange","prefix","postfix","allowClear","bordered","onBlur","handleChange","width","checkedChildren","unCheckedChildren","_objectWithoutProperties","_excluded","useCallback","e","target","checked","React","Form","className","help","undefined","hasFeedback","validateStatus","Checkbox","lfLog"],"sourceRoot":""}