{"version":3,"file":"980-fc959673dfc19e36eebc.js","mappings":"imBASA,IAAMA,GAAsBC,EAAAA,EAAAA,KAC1B,SAAAC,GAgBM,IAfJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MAESC,GADEL,EAAXM,YACSN,EAATO,UAASP,EACTQ,SAAAA,OAAO,IAAAH,GAAQA,EAAAI,EAAAT,EACfU,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAX,EAChBY,SAAAA,OAAQ,IAAAD,GAAQA,EAGhBE,GAHgBb,EAChBc,SACKd,EAALe,MACQf,EAARa,UACMG,GAAAhB,EAANiB,OAAMjB,EACNkB,SAAAA,OAAO,IAAAF,EAAG,GAAEA,EACTG,E,kXAAIC,CAAApB,EAAAqB,GAEP,OACEC,IAAAA,cAACC,IAAAA,MAAU,CAAC,qBAAoBtB,EAAMuB,UAAU,6BAC7CtB,GAASoB,IAAAA,cAACC,IAAAA,aAAiB,KACzBrB,EACAC,GAAQK,GAAWc,IAAAA,cAACC,IAAAA,SAAa,CAACf,SAAO,GAAEL,IAE9CmB,IAAAA,cAACG,IAAaC,EAAA,CACZC,QAAM,EACN1B,KAAMA,EACNG,MAAOA,EACPS,SAAUA,IACNe,EAAAA,EAAAA,IAAST,KAEXD,QAAAA,EAAW,IAAIW,KAAI,SAAAC,GAAA,IAAG1B,EAAK0B,EAAL1B,MAAOF,EAAK4B,EAAL5B,MAAK,OAClCoB,IAAAA,cAACS,IAAQ,CACPC,IAAK5B,EACLA,MAAOA,EACPM,SAAUA,EACVE,SAAUA,GAETV,EACQ,KAGdC,IAASK,GAAWc,IAAAA,cAACC,IAAAA,SAAa,KAAEpB,GAG3C,GACA,CAAC,QAAS,OAAQ,eAClB,CACEe,QAASe,EAAAA,MAGbC,EAAAA,EAAAA,GAAM,+BAEN,W","sources":["webpack:///./react-rsuite5/checkbox-group/index.js"],"sourcesContent":["import React from 'react';\nimport Form from 'rsuite/Form';\nimport Checkbox from 'rsuite/Checkbox';\nimport CheckboxGroup from 'rsuite/CheckboxGroup';\n\nimport { I18N } from '../../components';\nimport { i18nOptions, passRest } from '../../helpers';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst CheckboxGroupRSuite = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    placeholder,\n    plaintext,\n    tooltip = false,\n    disabled = false,\n    readOnly = false,\n    required = false,\n    error,\n    onChange,\n    onBlur,\n    options = [],\n    ...rest\n  }) => {\n    return (\n      <Form.Group data-lf-field-name={name} className=\"lf-control-checkbox-group\">\n        {label && <Form.ControlLabel>\n          {label}\n          {hint && tooltip && <Form.HelpText tooltip>{hint}</Form.HelpText>}\n        </Form.ControlLabel>}\n        <CheckboxGroup\n          inline\n          name={name}\n          value={value}\n          onChange={onChange}\n          {...passRest(rest)}\n        >\n          {(options ?? []).map(({ value, label}) => (\n            <Checkbox\n              key={value}\n              value={value}\n              disabled={disabled}\n              readOnly={readOnly}\n            >\n              {label}\n            </Checkbox>\n          ))}\n        </CheckboxGroup>\n        {hint && !tooltip && <Form.HelpText>{hint}</Form.HelpText>}\n      </Form.Group>\n    );\n  },\n  ['label', 'hint', 'placeholder'],\n  {\n    options: i18nOptions\n  }\n);\nlfLog('Loaded RSuite.CheckboxGroup');\n\nexport default CheckboxGroupRSuite;\n"],"names":["CheckboxGroupRSuite","I18N","_ref","name","label","hint","value","_ref$tooltip","placeholder","plaintext","tooltip","_ref$disabled","disabled","_ref$readOnly","readOnly","onChange","required","error","_ref$options","onBlur","options","rest","_objectWithoutProperties","_excluded","React","Form","className","CheckboxGroup","_extends","inline","passRest","map","_ref2","Checkbox","key","i18nOptions","lfLog"],"sourceRoot":""}