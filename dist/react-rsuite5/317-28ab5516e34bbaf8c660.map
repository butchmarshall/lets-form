{"version":3,"file":"317-28ab5516e34bbaf8c660.js","mappings":"wNAKMA,EAAgB,CACpBC,QAAS,MACTC,MAAO,WAGHC,EAAsB,SAAHC,GAAmC,IAA7BC,EAAYD,EAAZC,aAAcC,EAAQF,EAARE,SACrCC,GAAaC,EAAAA,EAAAA,UAanB,OAXAC,EAAAA,EAAAA,YACE,WACMJ,EACFE,EAAWG,QAAQC,OAEnBJ,EAAWG,QAAQE,OAEvB,GACA,CAACP,IAIDQ,IAAAA,cAACC,IAAO,CACNC,UAAU,cACVC,IAAKT,EACLU,QAAQ,OACRC,QAASL,IAAAA,cAACM,IAAO,CACfC,MAAOpB,EACPqB,UAAWhB,EACXiB,UAAU,kCACXT,IAAAA,cAAA,WAAMR,KACPC,EAEN,C,iiBC3BA,IAAMiB,EAAoB,SAAHnB,GAiBjB,IAhBJoB,EAAIpB,EAAJoB,KACAC,EAAKrB,EAALqB,MACAC,EAAItB,EAAJsB,KACAC,EAAKvB,EAALuB,MACAC,EAAWxB,EAAXwB,YAAWC,EAAAzB,EACX0B,QAAAA,OAAO,IAAAD,GAAQA,EAAAE,EAAA3B,EACf4B,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAA7B,EAChB8B,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAA/B,EAChBgC,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAKjC,EAALiC,MACAC,EAAQlC,EAARkC,SACAC,EAAMnC,EAANmC,OACAC,EAAUpC,EAAVoC,WACAC,EAAMrC,EAANqC,OAEGC,GADKtC,EAARuC,S,kXACOC,CAAAxC,EAAAyC,IAEP,OACEhC,IAAAA,cAACiC,IAAAA,MAAU,CAAC,qBAAoBtB,EAAMF,UAAU,mBAC7CG,GACCZ,IAAAA,cAACiC,IAAAA,aAAiB,KACfrB,EACAC,GAAQI,GAAWjB,IAAAA,cAACiC,IAAAA,SAAa,CAAChB,SAAO,GAAEJ,GAC3CU,GAAYvB,IAAAA,cAACkC,EAAAA,GAAY,OAG9BlC,IAAAA,cAACV,EAAAA,EAAmB,CAACE,aAAc2C,IAAWX,GAASA,OAAQY,GAC7DpC,IAAAA,cAACqC,IAAUC,EAAA,CACTX,WAAYA,QAAAA,OAAcS,EAC1BzB,KAAMA,EACNiB,OAAQA,GAAU,aAClBW,aAAczB,EACdW,SAAUA,EACVJ,SAAUA,EACVK,OAAQA,EACRlC,aAAc2C,IAAWX,GAASA,OAAQY,EAC1CjB,SAAUA,EACVJ,YAAaA,IACTyB,EAAAA,EAAAA,IAASX,MAGhBhB,IAASI,GAAWjB,IAAAA,cAACiC,IAAAA,SAAa,KAAEpB,GAG3C,C,8XC9CA,IAAM4B,GAAaC,EAAAA,EAAAA,KACjB,SAAAnD,GAIM,IAEAoD,EALJlB,EAAQlC,EAARkC,SACAX,EAAKvB,EAALuB,MACGe,E,kXAAIE,CAAAxC,EAAAyC,GAIP,GAAIY,IAAS9B,GACX6B,EAAe7B,OACV,GAAIqB,IAAWrB,GAAQ,CAC5B,IAAM+B,EAAI,IAAIC,KAAKhC,IACfiC,EAAAA,EAAAA,IAAYF,KACdF,EAAeE,EAEnB,CAGA,IAAMG,GAAeC,EAAAA,EAAAA,cACnB,SAAAJ,GACMA,GAAKA,EAAEK,aACTzB,EAASoB,EAAEK,cAAcC,MAAM,KAAK,GAExC,GACA,CAAC1B,IAGH,OACEzB,IAAAA,cAACU,EAAAA,EAAiB4B,EAAA,CAChBxB,MAAO6B,EACPlB,SAAUuB,IACNR,EAAAA,EAAAA,IAASX,IAGnB,GACA,CAAC,QAAS,OAAQ,iBAEpBuB,EAAAA,EAAAA,GAAM,6BAEN,W","sources":["webpack:///./components/rsuite-field-control/index.js","webpack:///./components/rsuite-generic-date/index.js","webpack:///./react-rsuite5/date/index.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport Whisper from 'rsuite/Whisper';\nimport Popover from 'rsuite/Popover';\n\nconst POPOVER_STYLE = {\n  padding: '6px',\n  color: '#ff6633'\n};\n\nconst RSuite5FieldControl = ({ errorMessage, children }) => {\n  const triggerRef = useRef();\n\n  useEffect(\n    () => {\n      if (errorMessage) {\n        triggerRef.current.open();\n      } else {\n        triggerRef.current.close();\n      }\n    },\n    [errorMessage]\n  );\n\n  return (\n    <Whisper\n      placement=\"bottomStart\"\n      ref={triggerRef}\n      trigger=\"none\"\n      speaker={<Popover \n        style={POPOVER_STYLE} \n        visible={!!errorMessage}\n        className=\"lf-react-rsuite5-error-popover\"\n      ><div>{errorMessage}</div></Popover>}\n    >{children}</Whisper>\n  );\n}\n\nexport { RSuite5FieldControl };\n","import React from 'react';\nimport _ from 'lodash';\nimport Form from 'rsuite/Form';\nimport DatePicker from 'rsuite/DatePicker';\n\nimport { RequiredIcon } from '../../components';\nimport { passRest } from '../../helpers';\nimport { RSuite5FieldControl } from '../rsuite-field-control';\n\nconst RSuiteGenericDate = ({\n  name,\n  label,\n  hint,\n  value,\n  placeholder,\n  tooltip = false,\n  disabled = false,\n  readOnly = false,\n  required = false,\n  error,\n  onChange,\n  onBlur,\n  appearance,\n  format,\n  lfLocale,\n  ...rest\n}) => {\n  return (\n    <Form.Group data-lf-field-name={name} className=\"lf-control-date\">\n      {label && (\n        <Form.ControlLabel>\n          {label}\n          {hint && tooltip && <Form.HelpText tooltip>{hint}</Form.HelpText>}\n          {required && <RequiredIcon />}\n        </Form.ControlLabel>\n      )}      \n      <RSuite5FieldControl errorMessage={_.isString(error) ? error : undefined }>\n        <DatePicker\n          appearance={appearance ?? undefined}\n          name={name}\n          format={format || 'yyyy-MM-dd'}\n          defaultValue={value}\n          onChange={onChange}\n          readOnly={readOnly}\n          onBlur={onBlur}\n          errorMessage={_.isString(error) ? error : undefined }\n          disabled={disabled}\n          placeholder={placeholder}\n          {...passRest(rest)}\n        />\n      </RSuite5FieldControl>\n      {hint && !tooltip && <Form.HelpText>{hint}</Form.HelpText>}\n    </Form.Group>\n  );\n};\n\nexport { RSuiteGenericDate };\n","import React, { useCallback } from 'react';\nimport _ from 'lodash';\n\nimport { I18N } from '../../components';\nimport { RSuiteGenericDate } from '../../components/rsuite-generic-date';\nimport { isValidDate, passRest } from '../../helpers';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst SelectDate = I18N(\n  ({\n    onChange,\n    value,\n    ...rest\n  }) => {\n    // also accepts string dates\n    let currentValue;\n    if (_.isDate(value)) {\n      currentValue = value;\n    } else if (_.isString(value)) {\n      const d = new Date(value);\n      if (isValidDate(d)) {\n        currentValue = d;\n      }\n    }\n\n    // send always date string in format yyyy-mm-dd\n    const handleChange = useCallback(\n      d => {\n        if (d && d.toISOString) {\n          onChange(d.toISOString().split('T')[0]);\n        }\n      },\n      [onChange]\n    );\n\n    return (\n      <RSuiteGenericDate\n        value={currentValue}\n        onChange={handleChange}\n        {...passRest(rest)}\n      />\n    )\n  },\n  ['label', 'hint', 'placeholder']\n);\nlfLog('Loaded RSuite5.SelectDate');\n\nexport default SelectDate;\n"],"names":["POPOVER_STYLE","padding","color","RSuite5FieldControl","_ref","errorMessage","children","triggerRef","useRef","useEffect","current","open","close","React","Whisper","placement","ref","trigger","speaker","Popover","style","visible","className","RSuiteGenericDate","name","label","hint","value","placeholder","_ref$tooltip","tooltip","_ref$disabled","disabled","_ref$readOnly","readOnly","_ref$required","required","error","onChange","onBlur","appearance","format","rest","lfLocale","_objectWithoutProperties","_excluded","Form","RequiredIcon","_isString","undefined","DatePicker","_extends","defaultValue","passRest","SelectDate","I18N","currentValue","_isDate","d","Date","isValidDate","handleChange","useCallback","toISOString","split","lfLog"],"sourceRoot":""}