{"version":3,"file":"980-9aee716cb4c905304a26.js","mappings":"+kBASA,IAAMA,GAAsBC,EAAAA,EAAAA,KAC1B,SAAAC,GAeM,IAdJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MAAKC,EAAAL,EACLM,QAAAA,OAAO,IAAAD,GAAQA,EAAAE,EAAAP,EACfQ,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAT,EAChBU,SAAAA,OAAQ,IAAAD,GAAQA,EAGhBE,GAHgBX,EAChBY,SACKZ,EAALa,MACKb,EAALW,OACAG,EAAQd,EAARc,SACMC,GAAAf,EAANgB,OAAMhB,EACNiB,SAAAA,OAAO,IAAAF,EAAG,GAAEA,EACTG,E,kXAAIC,CAAAnB,EAAAoB,GAEP,OACEC,IAAAA,cAACC,IAAAA,MAAU,CAAC,qBAAoBrB,EAAMsB,UAAU,6BAC7CrB,GAASmB,IAAAA,cAACC,IAAAA,aAAiB,KACzBpB,EACAC,GAAQG,GAAWe,IAAAA,cAACC,IAAAA,SAAa,CAAChB,SAAO,GAAEH,IAE9CkB,IAAAA,cAACG,IAAaC,EAAA,CACZC,QAAM,EACNzB,KAAMA,EACNG,MAAOA,EACPU,SAAUA,IACNa,EAAAA,EAAAA,IAAST,KAEXD,QAAAA,EAAW,IAAIW,KAAI,SAAAC,GAAA,IAAGzB,EAAKyB,EAALzB,MAAOF,EAAK2B,EAAL3B,MAAK,OAClCmB,IAAAA,cAACS,IAAQ,CACPC,IAAK3B,EACLA,MAAOA,EACPI,SAAUA,EACVE,SAAUA,EACVC,MAAOA,GAENT,EACQ,KAGdC,IAASG,GAAWe,IAAAA,cAACC,IAAAA,SAAa,KAAEnB,GAG3C,GACA,CAAC,QAAS,QACV,CACEc,QAASe,EAAAA,MAGbC,EAAAA,EAAAA,GAAM,+BAEN,W","sources":["webpack:///./react-rsuite5/checkbox-group/index.js"],"sourcesContent":["import React from 'react';\nimport Form from 'rsuite/Form';\nimport Checkbox from 'rsuite/Checkbox';\nimport CheckboxGroup from 'rsuite/CheckboxGroup';\n\nimport { I18N } from '../../components';\nimport { i18nOptions, passRest } from '../../helpers';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst CheckboxGroupRSuite = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    tooltip = false,\n    disabled = false,\n    readOnly = false,\n    required = false,\n    error,\n    color,\n    onChange,\n    onBlur,\n    options = [],\n    ...rest\n  }) => {\n    return (\n      <Form.Group data-lf-field-name={name} className=\"lf-control-checkbox-group\">\n        {label && <Form.ControlLabel>\n          {label}\n          {hint && tooltip && <Form.HelpText tooltip>{hint}</Form.HelpText>}\n        </Form.ControlLabel>}\n        <CheckboxGroup\n          inline\n          name={name}\n          value={value}\n          onChange={onChange}\n          {...passRest(rest)}\n        >\n          {(options ?? []).map(({ value, label}) => (\n            <Checkbox\n              key={value}\n              value={value}\n              disabled={disabled}\n              readOnly={readOnly}\n              color={color}\n            >\n              {label}\n            </Checkbox>\n          ))}\n        </CheckboxGroup>\n        {hint && !tooltip && <Form.HelpText>{hint}</Form.HelpText>}\n      </Form.Group>\n    );\n  },\n  ['label', 'hint'],\n  {\n    options: i18nOptions\n  }\n);\nlfLog('Loaded RSuite.CheckboxGroup');\n\nexport default CheckboxGroupRSuite;\n"],"names":["CheckboxGroupRSuite","I18N","_ref","name","label","hint","value","_ref$tooltip","tooltip","_ref$disabled","disabled","_ref$readOnly","readOnly","color","required","error","onChange","_ref$options","onBlur","options","rest","_objectWithoutProperties","_excluded","React","Form","className","CheckboxGroup","_extends","inline","passRest","map","_ref2","Checkbox","key","i18nOptions","lfLog"],"sourceRoot":""}