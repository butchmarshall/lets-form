{"version":3,"file":"459-bfa85ce959db79235d82.js","mappings":"wNAKMA,EAAgB,CACpBC,QAAS,MACTC,MAAO,WAGHC,EAAsB,SAAHC,GAAmC,IAA7BC,EAAYD,EAAZC,aAAcC,EAAQF,EAARE,SACrCC,GAAaC,EAAAA,EAAAA,UAanB,OAXAC,EAAAA,EAAAA,YACE,WACMJ,EACFE,EAAWG,QAAQC,OAEnBJ,EAAWG,QAAQE,OAEvB,GACA,CAACP,IAIDQ,IAAAA,cAACC,IAAO,CACNC,UAAU,cACVC,IAAKT,EACLU,QAAQ,OACRC,QAASL,IAAAA,cAACM,IAAO,CACfC,MAAOpB,EACPqB,UAAWhB,EACXiB,UAAU,kCACXT,IAAAA,cAAA,WAAMR,KACPC,EAEN,C,4IC3BMiB,GAAcC,EAAAA,EAAAA,KAClB,SAAApB,GAaM,IAZJqB,EAAIrB,EAAJqB,KACAC,EAAKtB,EAALsB,MACAC,EAAIvB,EAAJuB,KACAC,EAAKxB,EAALwB,MACAC,EAAIzB,EAAJyB,KAAIC,EAAA1B,EACJ2B,QAAAA,OAAO,IAAAD,GAAQA,EAAAE,EAAA5B,EACf6B,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAA9B,EAChB+B,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAQhC,EAARgC,SACAC,EAAejC,EAAfiC,gBACAC,EAAiBlC,EAAjBkC,kBACAC,EAAKnC,EAALmC,MAEA,OACE1B,IAAAA,cAAC2B,IAAAA,MAAU,CAACC,UAAWhB,EAAMH,UAAU,qBACpCI,GACCb,IAAAA,cAAC2B,IAAAA,aAAiB,KACfd,EACAC,GAAQI,GAAWlB,IAAAA,cAAC2B,IAAAA,SAAa,CAACT,SAAO,GAAEJ,GAC3CQ,GAAYtB,IAAAA,cAAC6B,EAAAA,GAAY,OAG9B7B,IAAAA,cAACV,EAAAA,EAAmB,CAACE,aAAcsC,IAAWJ,GAASA,OAAQK,GAC7D/B,IAAAA,cAACgC,IAAM,CACLpB,KAAMA,EACNqB,QAASlB,EACTQ,SAAUA,EACVH,SAAUA,EACVK,kBAAmBA,GAA2C,KAAtBA,EAA2BA,OAAoBM,EACvFP,gBAAiBA,GAAuC,KAApBA,EAAyBA,OAAkBO,EAC/EvC,aAAcsC,IAAWJ,GAASA,OAAQK,EAC1Cf,KAAMA,KAGTF,IAASI,GAAWlB,IAAAA,cAAC2B,IAAAA,SAAa,KAAEb,GAG3C,GACA,CAAC,QAAS,OAAQ,kBAAmB,uBAEvCoB,EAAAA,EAAAA,GAAM,8BAEN,W","sources":["webpack:///./components/rsuite-field-control/index.js","webpack:///./react-rsuite5/toggle/index.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport Whisper from 'rsuite/Whisper';\nimport Popover from 'rsuite/Popover';\n\nconst POPOVER_STYLE = {\n  padding: '6px',\n  color: '#ff6633'\n};\n\nconst RSuite5FieldControl = ({ errorMessage, children }) => {\n  const triggerRef = useRef();\n\n  useEffect(\n    () => {\n      if (errorMessage) {\n        triggerRef.current.open();\n      } else {\n        triggerRef.current.close();\n      }\n    },\n    [errorMessage]\n  );\n\n  return (\n    <Whisper\n      placement=\"bottomStart\"\n      ref={triggerRef}\n      trigger=\"none\"\n      speaker={<Popover \n        style={POPOVER_STYLE} \n        visible={!!errorMessage}\n        className=\"lf-react-rsuite5-error-popover\"\n      ><div>{errorMessage}</div></Popover>}\n    >{children}</Whisper>\n  );\n}\n\nexport { RSuite5FieldControl };\n","import React from 'react';\nimport _ from 'lodash';\nimport Form from 'rsuite/Form';\nimport Toggle from 'rsuite/Toggle';\n\nimport { RequiredIcon, I18N } from '../../components';\nimport { lfLog } from '../../helpers/lf-log';\nimport { RSuite5FieldControl } from '../../components/rsuite-field-control';\n\nconst ToggleInput = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    size,\n    tooltip = false,\n    disabled = false,\n    required = false,\n    onChange,\n    checkedChildren,\n    unCheckedChildren,\n    error\n  }) => {\n    return (\n      <Form.Group controlId={name} className=\"lf-control-toggle\">\n        {label && (\n          <Form.ControlLabel>\n            {label}\n            {hint && tooltip && <Form.HelpText tooltip>{hint}</Form.HelpText>}\n            {required && <RequiredIcon />}\n          </Form.ControlLabel>\n        )}\n        <RSuite5FieldControl errorMessage={_.isString(error) ? error : undefined }>\n          <Toggle\n            name={name}\n            checked={value}\n            onChange={onChange}\n            disabled={disabled}\n            unCheckedChildren={unCheckedChildren && unCheckedChildren !== '' ? unCheckedChildren : undefined}\n            checkedChildren={checkedChildren && checkedChildren !== '' ? checkedChildren : undefined}\n            errorMessage={_.isString(error) ? error : undefined }\n            size={size}\n          />\n        </RSuite5FieldControl>\n        {hint && !tooltip && <Form.HelpText>{hint}</Form.HelpText>}\n      </Form.Group>\n    );\n  },\n  ['label', 'hint', 'checkedChildren', 'unCheckedChildren']\n);\nlfLog('Loaded RSuite5.ToggleInput');\n\nexport default ToggleInput;\n"],"names":["POPOVER_STYLE","padding","color","RSuite5FieldControl","_ref","errorMessage","children","triggerRef","useRef","useEffect","current","open","close","React","Whisper","placement","ref","trigger","speaker","Popover","style","visible","className","ToggleInput","I18N","name","label","hint","value","size","_ref$tooltip","tooltip","_ref$disabled","disabled","_ref$required","required","onChange","checkedChildren","unCheckedChildren","error","Form","controlId","RequiredIcon","_isString","undefined","Toggle","checked","lfLog"],"sourceRoot":""}