{"version":3,"file":"356-581d66632be5f811abd7.js","mappings":"wNAKMA,EAAgB,CACpBC,QAAS,MACTC,MAAO,WAGHC,EAAsB,SAAHC,GAAmC,IAA7BC,EAAYD,EAAZC,aAAcC,EAAQF,EAARE,SACrCC,GAAaC,EAAAA,EAAAA,UAanB,OAXAC,EAAAA,EAAAA,YACE,WACMJ,EACFE,EAAWG,QAAQC,OAEnBJ,EAAWG,QAAQE,OAEvB,GACA,CAACP,IAIDQ,IAAAA,cAACC,IAAO,CACNC,UAAU,cACVC,IAAKT,EACLU,QAAQ,OACRC,QAASL,IAAAA,cAACM,IAAO,CACfC,MAAOpB,EACPqB,UAAWhB,EACXiB,UAAU,kCACXT,IAAAA,cAAA,WAAMR,KACPC,EAEN,C,4IC3BMiB,GAAaC,EAAAA,EAAAA,KACjB,SAAApB,GAiBM,IAhBJqB,EAAIrB,EAAJqB,KACAC,EAAKtB,EAALsB,MACAC,EAAIvB,EAAJuB,KACAC,EAAKxB,EAALwB,MACAC,EAAIzB,EAAJyB,KAAIC,EAAA1B,EACJ2B,QAAAA,OAAO,IAAAD,GAAQA,EAAAE,EAAA5B,EACf6B,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAA9B,EAChB+B,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAhC,EAChBiC,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAKlC,EAALkC,MAAKC,EAAAnC,EACLoC,UAAAA,OAAS,IAAAD,GAAQA,EAAAE,EAAArC,EACjBsC,UAAAA,OAAS,IAAAD,GAAOA,EAChBE,EAAGvC,EAAHuC,IACAzC,EAAKE,EAALF,MACA0C,EAAQxC,EAARwC,SACAC,EAAMzC,EAANyC,OAEA,OACEhC,IAAAA,cAACiC,IAAAA,MAAU,CAACC,UAAWtB,EAAMH,UAAU,uBACpCI,GAASb,IAAAA,cAACiC,IAAAA,aAAiB,KACzBpB,EACAC,GAAQI,GAAWlB,IAAAA,cAACiC,IAAAA,SAAa,CAACf,SAAO,GAAEJ,GAC3CU,GAAYxB,IAAAA,cAACmC,EAAAA,GAAY,OAE5BnC,IAAAA,cAACV,EAAAA,EAAmB,CAACE,aAAc4C,IAAWX,GAASA,OAAQY,GAC7DrC,IAAAA,cAACsC,IAAI,CACH1B,KAAMA,EACNG,MAAOA,EACPgB,SAAUA,EACVC,OAAQA,EACRZ,SAAUA,EACVJ,KAAMA,EACNc,IAAKA,EACLzC,MAAOA,EACPsC,UAAWA,EACXE,UAAWA,EACXP,SAAUA,EACV9B,aAAc4C,IAAWX,GAASA,OAAQY,KAG7CvB,IAASI,GAAWlB,IAAAA,cAACiC,IAAAA,SAAa,KAAEnB,GAG3C,GACA,CAAC,QAAS,OAAQ,iBAEpByB,EAAAA,EAAAA,GAAM,uBAEN,W","sources":["webpack:///./components/rsuite-field-control/index.js","webpack:///./react-rsuite5/rate/index.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport Whisper from 'rsuite/Whisper';\nimport Popover from 'rsuite/Popover';\n\nconst POPOVER_STYLE = {\n  padding: '6px',\n  color: '#ff6633'\n};\n\nconst RSuite5FieldControl = ({ errorMessage, children }) => {\n  const triggerRef = useRef();\n\n  useEffect(\n    () => {\n      if (errorMessage) {\n        triggerRef.current.open();\n      } else {\n        triggerRef.current.close();\n      }\n    },\n    [errorMessage]\n  );\n\n  return (\n    <Whisper\n      placement=\"bottomStart\"\n      ref={triggerRef}\n      trigger=\"none\"\n      speaker={<Popover \n        style={POPOVER_STYLE} \n        visible={!!errorMessage}\n        className=\"lf-react-rsuite5-error-popover\"\n      ><div>{errorMessage}</div></Popover>}\n    >{children}</Whisper>\n  );\n}\n\nexport { RSuite5FieldControl };\n","import React from 'react';\nimport Form from 'rsuite/Form';\nimport Rate from 'rsuite/Rate';\nimport _ from 'lodash';\n\nimport { RequiredIcon, I18N } from '../../components';\nimport { lfLog } from '../../helpers/lf-log';\nimport { RSuite5FieldControl } from '../../components/rsuite-field-control';\n\nconst RateRSuite = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    size,\n    tooltip = false,\n    disabled = false,\n    readOnly = false,\n    required = false,\n    error,\n    allowHalf = false,\n    cleanable = true,\n    max,\n    color,\n    onChange,\n    onBlur\n  }) => {\n    return (\n      <Form.Group controlId={name} className=\"lets-form-input-tag\">\n        {label && <Form.ControlLabel>\n          {label}\n          {hint && tooltip && <Form.HelpText tooltip>{hint}</Form.HelpText>}\n          {required && <RequiredIcon />}\n        </Form.ControlLabel>}\n        <RSuite5FieldControl errorMessage={_.isString(error) ? error : undefined }>\n          <Rate\n            name={name}\n            value={value}\n            onChange={onChange}\n            onBlur={onBlur}\n            disabled={disabled}\n            size={size}\n            max={max}\n            color={color}\n            allowHalf={allowHalf}\n            cleanable={cleanable}\n            readOnly={readOnly}\n            errorMessage={_.isString(error) ? error : undefined }\n          />\n        </RSuite5FieldControl>\n        {hint && !tooltip && <Form.HelpText>{hint}</Form.HelpText>}\n      </Form.Group>\n    );\n  },\n  ['label', 'hint', 'placeholder']\n);\nlfLog('Loaded RSuite5.Rate');\n\nexport default RateRSuite;\n"],"names":["POPOVER_STYLE","padding","color","RSuite5FieldControl","_ref","errorMessage","children","triggerRef","useRef","useEffect","current","open","close","React","Whisper","placement","ref","trigger","speaker","Popover","style","visible","className","RateRSuite","I18N","name","label","hint","value","size","_ref$tooltip","tooltip","_ref$disabled","disabled","_ref$readOnly","readOnly","_ref$required","required","error","_ref$allowHalf","allowHalf","_ref$cleanable","cleanable","max","onChange","onBlur","Form","controlId","RequiredIcon","_isString","undefined","Rate","lfLog"],"sourceRoot":""}