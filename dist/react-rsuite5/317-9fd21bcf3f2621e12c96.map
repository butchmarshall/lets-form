{"version":3,"file":"317-9fd21bcf3f2621e12c96.js","mappings":"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","sources":["webpack:///./components/rsuite-field-control/index.js","webpack:///./components/rsuite-generic-date/index.js","webpack:///./react-rsuite5/date/index.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport Whisper from 'rsuite/Whisper';\nimport Popover from 'rsuite/Popover';\n\nconst POPOVER_STYLE = {\n  padding: '6px',\n  color: '#ff6633'\n};\n\nconst RSuite5FieldControl = ({ errorMessage, children }) => {\n  const triggerRef = useRef();\n\n  useEffect(\n    () => {\n      if (errorMessage) {\n        triggerRef.current.open();\n      } else {\n        triggerRef.current.close();\n      }\n    },\n    [errorMessage]\n  );\n\n  return (\n    <Whisper\n      placement=\"bottomStart\"\n      ref={triggerRef}\n      trigger=\"none\"\n      speaker={<Popover \n        style={POPOVER_STYLE} \n        visible={!!errorMessage}\n        className=\"lf-react-rsuite5-error-popover\"\n      ><div>{errorMessage}</div></Popover>}\n    >{children}</Whisper>\n  );\n}\n\nexport { RSuite5FieldControl };\n","import React from 'react';\nimport _ from 'lodash';\nimport Form from 'rsuite/Form';\nimport DatePicker from 'rsuite/DatePicker';\n\nimport { RequiredIcon } from '../../components';\nimport { passRest } from '../../helpers';\nimport { RSuite5FieldControl } from '../rsuite-field-control';\n\nconst RSuiteGenericDate = ({\n  name,\n  label,\n  hint,\n  value,\n  placeholder,\n  tooltip = false,\n  disabled = false,\n  readOnly = false,\n  required = false,\n  error,\n  onChange,\n  onBlur,\n  appearance,\n  format,\n  lfLocale,\n  ...rest\n}) => {\n  console.log('passing date rest', ...passRest(rest))\n  return (\n    <Form.Group data-lf-field-name={name} className=\"lf-control-date\">\n      {label && (\n        <Form.ControlLabel>\n          {label}\n          {hint && tooltip && <Form.HelpText tooltip>{hint}</Form.HelpText>}\n          {required && <RequiredIcon />}\n        </Form.ControlLabel>\n      )}\n      <DatePicker\n          appearance={appearance ?? undefined}\n          name={name}\n          format={format || 'yyyy-MM-dd'}\n          defaultValue={value}\n          onChange={onChange}\n          readOnly={readOnly}\n          onBlur={onBlur}\n          errorMessage={_.isString(error) ? error : undefined }\n          disabled={disabled}\n          placeholder={placeholder}\n          {...passRest(rest)}\n        />      \n      <RSuite5FieldControl errorMessage={_.isString(error) ? error : undefined }>\n        <DatePicker\n          appearance={appearance ?? undefined}\n          name={name}\n          format={format || 'yyyy-MM-dd'}\n          defaultValue={value}\n          onChange={onChange}\n          readOnly={readOnly}\n          onBlur={onBlur}\n          errorMessage={_.isString(error) ? error : undefined }\n          disabled={disabled}\n          placeholder={placeholder}\n          {...passRest(rest)}\n        />\n      </RSuite5FieldControl>\n      {hint && !tooltip && <Form.HelpText>{hint}</Form.HelpText>}\n    </Form.Group>\n  );\n};\n\nexport { RSuiteGenericDate };\n","import React, { useCallback } from 'react';\nimport _ from 'lodash';\n\nimport { I18N } from '../../components';\nimport { RSuiteGenericDate } from '../../components/rsuite-generic-date';\nimport { isValidDate, passRest } from '../../helpers';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst SelectDate = I18N(\n  ({\n    onChange,\n    value,\n    ...rest\n  }) => {\n    // also accepts string dates\n    let currentValue;\n    if (_.isDate(value)) {\n      currentValue = value;\n    } else if (_.isString(value)) {\n      const d = new Date(value);\n      if (isValidDate(d)) {\n        currentValue = d;\n      }\n    }\n\n    // send always date string in format yyyy-mm-dd\n    const handleChange = useCallback(\n      d => {\n        if (d && d.toISOString) {\n          onChange(d.toISOString().split('T')[0]);\n        }\n      },\n      [onChange]\n    );\n\n    return (\n      <RSuiteGenericDate\n        value={currentValue}\n        onChange={handleChange}\n        {...passRest(rest)}\n      />\n    )\n  },\n  ['label', 'hint', 'placeholder']\n);\nlfLog('Loaded RSuite5.SelectDate');\n\nexport default SelectDate;\n"],"names":["POPOVER_STYLE","padding","color","RSuite5FieldControl","_ref","errorMessage","children","triggerRef","useRef","useEffect","current","open","close","React","Whisper","placement","ref","trigger","speaker","Popover","style","visible","className","RSuiteGenericDate","_console","name","label","hint","value","placeholder","_ref$tooltip","tooltip","_ref$disabled","disabled","_ref$readOnly","readOnly","_ref$required","required","error","onChange","onBlur","appearance","format","rest","lfLocale","_objectWithoutProperties","_excluded","console","log","apply","concat","passRest","Form","RequiredIcon","DatePicker","_extends","undefined","defaultValue","_isString","SelectDate","I18N","currentValue","_isDate","d","Date","isValidDate","handleChange","useCallback","toISOString","split","lfLog"],"sourceRoot":""}