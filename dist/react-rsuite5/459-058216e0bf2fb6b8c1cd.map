{"version":3,"file":"459-058216e0bf2fb6b8c1cd.js","mappings":"2JAAA,IAAMA,EAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAI,UAAYF,EAAG,wEAAyE,GAAG,C,qHCQpHG,GAAcC,EAAAA,EAAAA,KAClB,SAAAC,GAaM,IAZJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAIL,EAAJK,KAAIC,EAAAN,EACJO,QAAAA,OAAO,IAAAD,GAAQA,EAAAE,EAAAR,EACfS,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAV,EAChBW,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAQZ,EAARY,SACAC,EAAeb,EAAfa,gBACAC,EAAiBd,EAAjBc,kBACAC,EAAKf,EAALe,MAEA,OACEC,IAAAA,cAACC,EAAAA,EAAAA,MAAU,CAACC,UAAWjB,EAAMkB,UAAU,qBACpCjB,GACCc,IAAAA,cAACC,EAAAA,EAAAA,aAAiB,KACff,EACAC,GAAQI,GAAWS,IAAAA,cAACC,EAAAA,EAAAA,SAAa,CAACV,SAAO,GAAEJ,GAC3CQ,GAAYK,IAAAA,cAACI,EAAAA,GAAY,OAG9BJ,IAAAA,cAACC,EAAAA,EAAAA,QAAY,CACXhB,KAAMA,EACNoB,SAAUC,EAAAA,EACVlB,MAAOA,EACPQ,SAAUA,EACVH,SAAUA,EACVK,kBAAmBA,GAA2C,KAAtBA,EAA2BA,OAAoBS,EACvFV,gBAAiBA,GAAuC,KAApBA,EAAyBA,OAAkBU,EAC/EC,aAAcC,IAAWV,GAASA,OAAQQ,EAC1ClB,KAAMA,IAGPF,IAASI,GAAWS,IAAAA,cAACC,EAAAA,EAAAA,SAAa,KAAEd,GAG3C,GACA,CAAC,QAAS,OAAQ,kBAAmB,uBAEvCT,EAAAA,EAAAA,GAAM,8BAEN,W","sources":["webpack:///./helpers/lf-log.js","webpack:///./react-rsuite5/toggle/index.js"],"sourcesContent":["const lfLog = s => console.log('%cLF%c ' + s, 'background: #3498ff; color: #ffffff; padding: 2px; border-radius: 3px', '');\n\nexport { lfLog };","import React from 'react';\nimport _ from 'lodash';\nimport Form from 'rsuite/Form';\nimport Toggle from 'rsuite/Toggle';\n\nimport { RequiredIcon, I18N } from '../../components';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst ToggleInput = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    size,\n    tooltip = false,\n    disabled = false,\n    required = false,\n    onChange,\n    checkedChildren,\n    unCheckedChildren,\n    error\n  }) => {\n    return (\n      <Form.Group controlId={name} className=\"lf-control-toggle\">\n        {label && (\n          <Form.ControlLabel>\n            {label}\n            {hint && tooltip && <Form.HelpText tooltip>{hint}</Form.HelpText>}\n            {required && <RequiredIcon />}\n          </Form.ControlLabel>\n        )}\n        <Form.Control\n          name={name}\n          accepter={Toggle}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n          unCheckedChildren={unCheckedChildren && unCheckedChildren !== '' ? unCheckedChildren : undefined}\n          checkedChildren={checkedChildren && checkedChildren !== '' ? checkedChildren : undefined}\n          errorMessage={_.isString(error) ? error : undefined }\n          size={size}\n        >\n        </Form.Control>\n        {hint && !tooltip && <Form.HelpText>{hint}</Form.HelpText>}\n      </Form.Group>\n    );\n  },\n  ['label', 'hint', 'checkedChildren', 'unCheckedChildren']\n);\nlfLog('Loaded RSuite5.ToggleInput');\n\nexport default ToggleInput;\n"],"names":["lfLog","s","console","log","ToggleInput","I18N","_ref","name","label","hint","value","size","_ref$tooltip","tooltip","_ref$disabled","disabled","_ref$required","required","onChange","checkedChildren","unCheckedChildren","error","React","Form","controlId","className","RequiredIcon","accepter","Toggle","undefined","errorMessage","_isString"],"sourceRoot":""}