{"version":3,"file":"273-313dd519b2ee5c0bfaad.js","mappings":"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","sources":["webpack:///./components/rsuite-field-control/index.js","webpack:///../../../../node_modules/rsuite/esm/TagPicker/index.js","webpack:///./react-rsuite5/multiselect/index.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport Whisper from 'rsuite/Whisper';\nimport Popover from 'rsuite/Popover';\n\nconst POPOVER_STYLE = {\n  padding: '6px',\n  color: '#ff6633'\n};\n\nconst RSuite5FieldControl = ({ errorMessage, children }) => {\n  const triggerRef = useRef();\n\n  useEffect(\n    () => {\n      if (errorMessage) {\n        triggerRef.current.open();\n      } else {\n        triggerRef.current.close();\n      }\n    },\n    [errorMessage]\n  );\n\n  return (\n    <Whisper\n      placement=\"bottomStart\"\n      ref={triggerRef}\n      trigger=\"none\"\n      speaker={<Popover \n        style={POPOVER_STYLE} \n        visible={!!errorMessage}\n        className=\"lf-react-rsuite5-error-popover\"\n      ><div>{errorMessage}</div></Popover>}\n    >{children}</Whisper>\n  );\n}\n\nexport { RSuite5FieldControl };\n","'use client';\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useMemo } from 'react';\nimport InputPicker from '../InputPicker/InputPicker';\nimport InputPickerContext from '../InputPicker/InputPickerContext';\n/**\n * `TagPicker` component enables multi-selection by tags and supports new options.\n *\n * @see https://rsuitejs.com/components/tag-picker/\n */\nvar TagPicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$tagProps = props.tagProps,\n    tagProps = _props$tagProps === void 0 ? {} : _props$tagProps,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? 'Enter' : _props$trigger,\n    onTagRemove = props.onTagRemove,\n    renderMenuItemCheckbox = props.renderMenuItemCheckbox,\n    rest = _objectWithoutPropertiesLoose(props, [\"tagProps\", \"trigger\", \"onTagRemove\", \"renderMenuItemCheckbox\"]);\n  var contextValue = useMemo(function () {\n    return {\n      multi: true,\n      trigger: trigger,\n      tagProps: tagProps,\n      onTagRemove: onTagRemove,\n      renderMenuItemCheckbox: renderMenuItemCheckbox\n    };\n  }, [onTagRemove, renderMenuItemCheckbox, tagProps, trigger]);\n  return /*#__PURE__*/React.createElement(InputPickerContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(InputPicker, _extends({}, rest, {\n    ref: ref\n  })));\n});\nTagPicker.displayName = 'TagPicker';\nexport default TagPicker;","import React from 'react';\nimport _ from 'lodash';\nimport Form from 'rsuite/Form';\nimport TagPicker from 'rsuite/TagPicker';\nimport CheckPicker from 'rsuite/CheckPicker';\n\nimport { RequiredIcon, I18N } from '../../components';\nimport { i18nOptions, makeWidthStyle, passRest } from '../../helpers';\nimport { lfLog } from '../../helpers/lf-log';\nimport { RSuite5FieldControl } from '../../components/rsuite-field-control';\n\nconst Multiselect = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    size,\n    placeholder,\n    options,\n    tooltip = false,\n    disabled = false,\n    readOnly = false,\n    required = false,\n    error,\n    block = false,\n    searchable = false,\n    cleanable = false,\n    onChange,\n    onBlur,\n    placement,\n    appearance,\n    fullWidth,\n    multiselectMode,\n    width,\n    ...rest\n  }) => {\n    const Component = multiselectMode === 'tag' ? TagPicker : CheckPicker;\n\n    return (\n      <Form.Group\n        data-lf-field-name={name}\n        className=\"lf-control-multiselect\"\n        style={makeWidthStyle(fullWidth, width)}\n      >\n        {label && (\n          <Form.ControlLabel>\n            {label}\n            {hint && tooltip && <Form.HelpText tooltip>{hint}</Form.HelpText>}\n            {required && <RequiredIcon />}\n          </Form.ControlLabel>\n        )}\n        <RSuite5FieldControl errorMessage={_.isString(error) ? error : undefined }>\n          <Component\n            appearance={appearance ?? undefined}\n            name={name}\n            value={value}\n            onChange={onChange}\n            readOnly={readOnly}\n            onBlur={onBlur}\n            placement={placement}\n            errorMessage={_.isString(error) ? error : undefined }\n            disabled={disabled}\n            size={size}\n            placeholder={placeholder}\n            data={options || []}\n            block={block}\n            style={makeWidthStyle(fullWidth, width)}\n            searchable={searchable}\n            cleanable={cleanable}\n            {...passRest(rest)}\n          />\n        </RSuite5FieldControl>\n        {hint && !tooltip && <Form.HelpText>{hint}</Form.HelpText>}\n      </Form.Group>\n    );\n  },\n  ['label', 'hint', 'placeholder'],\n  {\n    options: i18nOptions\n  }\n);\nlfLog('Loaded RSuite5.Multiselect');\n\nexport default Multiselect;\n"],"names":["POPOVER_STYLE","padding","color","RSuite5FieldControl","_ref","errorMessage","children","triggerRef","useRef","useEffect","current","open","close","React","Whisper","placement","ref","trigger","speaker","Popover","style","visible","className","TagPicker","props","_props$tagProps","tagProps","_props$trigger","onTagRemove","renderMenuItemCheckbox","rest","contextValue","useMemo","multi","InputPickerContext","value","InputPicker","displayName","Multiselect","I18N","name","label","hint","size","placeholder","options","_ref$tooltip","tooltip","_ref$disabled","disabled","_ref$readOnly","readOnly","_ref$required","required","error","_ref$block","block","_ref$searchable","searchable","_ref$cleanable","cleanable","onChange","onBlur","appearance","fullWidth","multiselectMode","width","_objectWithoutProperties","_excluded","Component","CheckPicker","Form","makeWidthStyle","RequiredIcon","_isString","undefined","_extends","data","passRest","i18nOptions","lfLog"],"sourceRoot":""}