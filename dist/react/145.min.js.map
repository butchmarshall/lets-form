{"version":3,"file":"145.index.js","mappings":"uJAAA,IAAMA,EAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAI,UAAYF,EAAG,wEAAyE,GAAG,C,0gBCO1H,IAAMG,EAAuB,SAAHC,GAgBpB,IAfJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MAEAC,GADQH,EAARI,SACSJ,EAATG,WACAE,EAASL,EAATK,UACAC,EAAIN,EAAJM,KACAC,EAAKP,EAALO,MAEAC,GADYR,EAAZS,aACQT,EAARQ,UACAE,EAAMV,EAANU,OACAC,EAAKX,EAALW,MACAC,EAAQZ,EAARY,SACAC,EAAQb,EAARa,SACAC,EAAQd,EAARc,SACGC,E,kXAAIC,CAAAhB,EAAAiB,GAEDC,EAAWP,GAASQ,IAAWR,GAErC,OACES,IAAAA,cAAA,OACEjB,UAAWkB,IAAWlB,EAAW,+BACjC,qBAAoBF,GAEpBmB,IAAAA,cAAA,SAAOE,IAAKrB,EAAME,UAAU,0BAC1BiB,IAAAA,cAAA,QAAAG,EAAA,CACEC,KAAMnB,EACNoB,GAAIxB,EACJO,SAAUA,EACVE,OAAQA,EACRI,SAAmB,MAATH,EACVC,SAAUA,EACVC,SAAUA,EACVa,eAAgBnB,IACZoB,EAAAA,EAAAA,IAASZ,KACb,IAAEb,EAAM,IAAEY,GAAYM,IAAAA,cAACQ,EAAAA,GAAY,OAEtCtB,IAASY,GAAYE,IAAAA,cAAA,OAAKjB,UAAU,8BAA8BG,GAClEY,GAAYE,IAAAA,cAAA,OAAKjB,UAAU,+BAA+BQ,GAGjE,E,6PC1CA,IAAMkB,GAAWC,EAAAA,EAAAA,KACf,SAAA9B,GAA2B,IAAxBQ,EAAQR,EAARQ,SAAaO,E,kXAAIC,CAAAhB,EAAAiB,GAEZc,GAAeC,EAAAA,EAAAA,cACnB,SAAAC,GACEzB,EAASyB,EAAEC,OAAOC,QACpB,GACA,CAAC3B,IAGH,OACEY,IAAAA,cAACrB,EAAoBwB,EAAA,CACnBlB,UAAU,WACVF,UAAU,sBACVK,SAAUuB,GACNhB,GAGV,GACA,CAAC,OAAQ,WAEXpB,EAAAA,EAAAA,GAAM,yBAEN,O","sources":["webpack:///./helpers/lf-log.js","webpack:///./components/react-generic-checkbox/index.js","webpack:///./react/checkbox/index.js"],"sourcesContent":["const lfLog = s => console.log('%cLF%c ' + s, 'background: #3498ff; color: #ffffff; padding: 2px; border-radius: 3px', '');\n\nexport { lfLog };","import React from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\n\nimport { RequiredIcon } from '../../components';\nimport { passRest } from '../../helpers';\n\nconst ReactGenericCheckbox = ({\n  name,\n  label,\n  lfLocale,\n  className,\n  inputType,\n  hint,\n  value,\n  defaultValue,\n  onChange,\n  onBlur,\n  error,\n  disabled,\n  readOnly,\n  required,\n  ...rest\n}) => {\n  const hasError = error && _.isString(error);\n\n  return (\n    <div\n      className={classNames(className, 'lf-form-react-control-group')}\n      data-lf-field-name={name}\n    >\n      <label for={name} className=\"lf-form-react-checkbox\">\n        <input\n          type={inputType}\n          id={name}\n          onChange={onChange}\n          onBlur={onBlur}\n          required={error != null}\n          disabled={disabled}\n          readOnly={readOnly}\n          defaultChecked={value}\n          {...passRest(rest)}\n        /> {label} {required && <RequiredIcon />}\n      </label>\n      {hint && !hasError && <div className=\"lf-form-react-form-message\">{hint}</div>}\n      {hasError && <div className=\"lf-form-react-error-message\">{error}</div>}\n    </div>\n  );\n};\n\nexport { ReactGenericCheckbox };\n","import React, { useCallback } from 'react';\n\nimport { ReactGenericCheckbox } from '../../components/react-generic-checkbox';\nimport { I18N } from '../../components';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst Checkbox = I18N(\n  ({ onChange, ...rest }) => {\n\n    const handleChange = useCallback(\n      e => {\n        onChange(e.target.checked);\n      },\n      [onChange]\n    );\n\n    return (\n      <ReactGenericCheckbox\n        inputType=\"checkbox\"\n        className=\"lf-control-checkbox\"\n        onChange={handleChange}\n        {...rest}\n      />\n    );\n  },\n  ['hint', 'label']\n);\nlfLog('Loaded React.Checkbox');\n\nexport default Checkbox;"],"names":["lfLog","s","console","log","ReactGenericCheckbox","_ref","name","label","className","lfLocale","inputType","hint","value","onChange","defaultValue","onBlur","error","disabled","readOnly","required","rest","_objectWithoutProperties","_excluded","hasError","_isString","React","classNames","for","_extends","type","id","defaultChecked","passRest","RequiredIcon","Checkbox","I18N","handleChange","useCallback","e","target","checked"],"sourceRoot":""}