{"version":3,"file":"748-8f57be2e17d8e044080b.js","mappings":"0rBAOA,IAAMA,EAAoB,SAAHC,GAwBjB,IAvBJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAQH,EAARG,SACAC,EAAIJ,EAAJI,KACAC,EAAKL,EAALK,MACAC,EAAQN,EAARM,SACAC,EAAMP,EAANO,OACAC,EAAKR,EAALQ,MACAC,EAAST,EAATS,UACAC,EAAQV,EAARU,SACAC,EAAQX,EAARW,SACAC,EAAQZ,EAARY,SAAQC,EAAAb,EACRc,cAAAA,OAAa,IAAAD,GAAQA,EAErBE,GADIf,EAAJgB,KACKhB,EAALe,OACAE,EAASjB,EAATiB,UACAC,EAAWlB,EAAXkB,YACAC,EAAYnB,EAAZmB,aACAC,EAASpB,EAAToB,UACAC,EAASrB,EAATqB,UACSC,GAAAtB,EAATuB,UAASvB,EACTwB,WAAAA,OAAS,IAAAF,EAAG,WAAO,EAACA,EACjBG,E,kXAAIC,CAAA1B,EAAA2B,GAEDC,EAAWpB,GAASqB,IAAWrB,GAC/BsB,GAAcC,EAAAA,EAAAA,cAAY,SAAAC,GAAC,OAAkB,KAAdA,EAAEC,SAAkBT,GAAW,GAAE,CAACA,IAEvE,OACEU,IAAAA,cAAA,OACEzB,UAAW0B,IAAW1B,EAAW,+BACjC,qBAAoBR,GAEpBiC,IAAAA,cAAA,SAAOE,IAAKnC,GACTC,EACAU,GAAYsB,IAAAA,cAACG,EAAAA,EAAY,OAE1BH,IAAAA,cAAA,QAAAI,EAAA,CACEC,KAAMnB,EACNoB,KAAMrC,EACNsC,GAAIxC,EACJyC,aAAcrC,EACdC,SAAUA,EACVC,OAAQA,EACRoC,QAAS7B,EAAgBgB,OAAcc,EACvC1B,YAAaA,EACb2B,OAAOC,EAAAA,EAAAA,IAAe7B,EAAWF,GACjCgC,aAAc5B,EACdE,UAAWA,EACXX,SAAUA,EACVC,SAAUA,IACNqC,EAAAA,EAAAA,IAASvB,KAEdrB,IAASwB,GAAYM,IAAAA,cAAA,OAAKzB,UAAU,yBAAyBL,GAC7DwB,GAAYM,IAAAA,cAAA,OAAKzB,UAAU,+BAA+BD,GAGnE,C,oPCrDIyC,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKJ,KAAW,YAAiB,WALlD,I,mPCbA,IAAMM,GAAYC,EAAAA,EAAAA,KAChB,SAAAxD,GAA0B,IAAvBM,EAAQN,EAARM,SAAamB,E,kXAAIC,CAAA1B,EAAA2B,GACZ8B,GAAe1B,EAAAA,EAAAA,cACnB,SAAAC,GAAC,OAAI1B,EAAS0B,EAAE0B,OAAOrD,MAAM,GAC7B,CAACC,IAGH,OACE4B,IAAAA,cAACnC,EAAAA,EAAiBuC,EAAA,CAChBf,UAAU,aACVd,UAAU,wBACVH,SAAUmD,GACNhC,GAGV,GACA,CAAC,QAAS,OAAQ,iBAEpBkC,EAAAA,EAAAA,GAAM,0BAEN,O,wDCzBIC,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOrB,GAAI,0EAA2E,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,gDAAgD,MAAQ,GAAG,SAAW,kBAAkB,eAAiB,CAAC,gHAAgH,WAAa,MAEtX,K","sources":["webpack:///./components/react-generic-input/index.js","webpack:///./react/input-text/input-text.scss?8e64","webpack:///./react/input-text/index.js","webpack:///./react/input-text/input-text.scss"],"sourcesContent":["import React, { useCallback } from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\n\nimport { RequiredIcon } from '../required-icon';\nimport { makeWidthStyle, passRest } from '../../helpers';\n\nconst ReactGenericInput = ({\n  name,\n  label,\n  lfLocale,\n  hint,\n  value,\n  onChange,\n  onBlur,\n  error,\n  className,\n  disabled,\n  readOnly,\n  required,\n  submitOnEnter = false,\n  size,\n  width,\n  fullWidth,\n  placeholder,\n  autocomplete,\n  inputType,\n  inputMode,\n  component,\n  lfOnEnter = () => {},\n  ...rest\n}) => {\n  const hasError = error && _.isString(error);\n  const handleKeyUp = useCallback(e => e.keyCode === 13 && lfOnEnter(), [lfOnEnter]);\n\n  return (\n    <div\n      className={classNames(className, 'lf-form-react-control-group')}\n      data-lf-field-name={name}\n    >\n      <label for={name}>\n        {label}\n        {required && <RequiredIcon />}\n      </label>\n        <input\n          type={inputType}\n          lang={lfLocale}\n          id={name}\n          defaultValue={value}\n          onChange={onChange}\n          onBlur={onBlur}\n          onKeyUp={submitOnEnter ? handleKeyUp : undefined}\n          placeholder={placeholder}\n          style={makeWidthStyle(fullWidth, width)}\n          autoComplete={autocomplete}\n          inputMode={inputMode}\n          disabled={disabled}\n          readOnly={readOnly}\n          {...passRest(rest)}\n        />\n        {hint && !hasError && <div className=\"lf-form-react-message\">{hint}</div>}\n        {hasError && <div className=\"lf-form-react-error-message\">{error}</div>}\n    </div>\n  );\n};\n\nexport { ReactGenericInput };\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./input-text.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./input-text.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback } from 'react';\n\nimport { I18N } from '../../components';\nimport { ReactGenericInput } from '../../components/react-generic-input';\nimport { lfLog } from '../../helpers/lf-log';\n\nimport './input-text.scss';\n\nconst TextInput = I18N(\n  ({ onChange, ...rest}) => {\n    const handleChange = useCallback(\n      e => onChange(e.target.value),\n      [onChange]\n    );\n\n    return (\n      <ReactGenericInput\n        component=\"input-text\"\n        className=\"lf-control-input-text\"\n        onChange={handleChange}\n        {...rest}\n      />\n    );\n  },\n  ['label', 'hint', 'placeholder']\n);\nlfLog('Loaded React.InputText');\n\nexport default TextInput;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".lf-form-react .lf-control-input-text input[type=color]{min-width:60px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./react/input-text/input-text.scss\"],\"names\":[],\"mappings\":\"AAEI,wDACE,cAAA\",\"sourcesContent\":[\".lf-form-react {\\n  .lf-control-input-text {\\n    input[type=color] {\\n      min-width: 60px;\\n    }\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["ReactGenericInput","_ref","name","label","lfLocale","hint","value","onChange","onBlur","error","className","disabled","readOnly","required","_ref$submitOnEnter","submitOnEnter","width","size","fullWidth","placeholder","autocomplete","inputType","inputMode","_ref$lfOnEnter","component","lfOnEnter","rest","_objectWithoutProperties","_excluded","hasError","_isString","handleKeyUp","useCallback","e","keyCode","React","classNames","for","RequiredIcon","_extends","type","lang","id","defaultValue","onKeyUp","undefined","style","makeWidthStyle","autoComplete","passRest","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","TextInput","I18N","handleChange","target","lfLog","___CSS_LOADER_EXPORT___","push","module"],"sourceRoot":""}