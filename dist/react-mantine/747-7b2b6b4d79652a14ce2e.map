{"version":3,"file":"747-7b2b6b4d79652a14ce2e.js","mappings":"48BAQA,IAAMA,GAAgBC,EAAAA,EAAAA,KACpB,SAAAC,GAgBM,I,IAfJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MAGeC,GAFJL,EAAXM,YACSN,EAATO,UAASP,EACTQ,QAAeR,EACfS,UAAAA,OAAQ,IAAAJ,GAAQA,EAAAK,EAAAV,EAChBW,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAZ,EAChBa,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAKd,EAALc,MACAC,EAAQf,EAARe,SACMC,GAAAhB,EAANiB,OAAMjB,EACNkB,SAAAA,OAAO,IAAAF,EAAG,GAAEA,EACTG,E,kXAAIC,CAAApB,EAAAqB,GAKNC,G,GAH+BC,EAAAA,EAAAA,UAC9BC,IAAUpB,GACRA,EAASA,EAAQqB,SAASC,MAAM,KAAO,I,EAC1C,E,unBAHMC,EAAQL,EAAA,GAAEM,EAAWN,EAAA,GAItBO,GAAeC,EAAAA,EAAAA,cACnB,SAACC,GACC,IAAIC,EAEFA,EADED,EAAEE,OAAOC,QACA,GAAHC,O,yWAAAC,CAAOT,GAAQ,CAAEI,EAAEE,OAAO7B,QAEvBuB,EAASU,QAAO,SAAAjC,GAAK,OAAIA,IAAU2B,EAAEE,OAAO7B,KAAK,IAE9DwB,EAAYI,GACZjB,EAASiB,EACX,GACA,CAACjB,IAGH,OACEuB,IAAAA,cAAA,OAAK,qBAAoBrC,EAAMsC,UAAU,6BACtCrC,GAASoC,IAAAA,cAACE,EAAAA,MAAAA,MAAW,CAAC3B,SAAUA,GAAWX,GAC5CoC,IAAAA,cAACG,EAAAA,MAAK,CAACC,MAAO,CAAEC,UAAW,gCACvBzB,QAAAA,EAAW,IAAI0B,KAAI,SAAAC,GAAA,IAAGzC,EAAKyC,EAALzC,MAAOF,EAAK2C,EAAL3C,MAAK,OAClCoC,IAAAA,cAACQ,EAAAA,SAAQC,EAAA,CACPC,IAAK5C,EACLA,MAAOA,EACPF,MAAOA,EACPO,SAAUA,EACVE,SAAUA,EACVI,SAAUc,EACVK,QAASP,EAASsB,SAAS7C,KACvB8C,EAAAA,EAAAA,IAAS/B,IAEZjB,EACQ,KAGdC,GAAQmC,IAAAA,cAACE,EAAAA,MAAAA,YAAiB,KAAErC,GAC5BW,GAASwB,IAAAA,cAACE,EAAAA,MAAAA,MAAW,KAAE1B,GAG9B,GACA,CAAC,QAAS,OAAQ,eAClB,CACEI,QAASiC,EAAAA,MAGbC,EAAAA,EAAAA,GAAM,gCAEN,W","sources":["webpack:///./react-mantine/checkbox-group/index.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Checkbox, Stack, Input } from '@mantine/core';\nimport _ from 'lodash';\n\nimport { I18N } from '../../components';\nimport { i18nOptions, passRest } from '../../helpers';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst CheckboxGroup = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    placeholder,\n    plaintext,\n    tooltip = false,\n    disabled = false,\n    readOnly = false,\n    required = false,\n    error,\n    onChange,\n    onBlur,\n    options = [],\n    ...rest\n  }) => {\n    const [selected, setSelected] = useState(\n      _.isArray(value) ? \n        value : (value ? String().split(',') : [])\n    )\n    const handleChange = useCallback(\n      (e) => {\n        let newValue; \n        if (e.target.checked) {\n          newValue = [...selected, e.target.value];\n        } else {\n          newValue = selected.filter(value => value !== e.target.value);\n        }\n        setSelected(newValue);\n        onChange(newValue);\n      },\n      [onChange]\n    );\n\n    return (\n      <div data-lf-field-name={name} className=\"lf-control-checkbox-group\">\n        {label && <Input.Label required={required}>{label}</Input.Label>}\n        <Stack style={{ marginTop: 'var(--lf-field-margin-top)'}}>\n          {(options ?? []).map(({ value, label}) => (\n            <Checkbox\n              key={value}\n              value={value}\n              label={label}\n              disabled={disabled}\n              readOnly={readOnly}\n              onChange={handleChange}\n              checked={selected.includes(value)}\n              {...passRest(rest)}\n            >\n              {label}\n            </Checkbox>\n          ))}\n        </Stack>\n        {hint && <Input.Description>{hint}</Input.Description>}\n        {error && <Input.Error>{error}</Input.Error>}\n      </div>\n    );\n  },\n  ['label', 'hint', 'placeholder'],\n  {\n    options: i18nOptions\n  }\n);\nlfLog('Loaded Mantine.CheckboxGroup');\n\nexport default CheckboxGroup;\n"],"names":["CheckboxGroup","I18N","_ref","name","label","hint","value","_ref$disabled","placeholder","plaintext","tooltip","disabled","_ref$readOnly","readOnly","_ref$required","required","error","onChange","_ref$options","onBlur","options","rest","_objectWithoutProperties","_excluded","_useState2","useState","_isArray","String","split","selected","setSelected","handleChange","useCallback","e","newValue","target","checked","concat","_toConsumableArray","filter","React","className","Input","Stack","style","marginTop","map","_ref2","Checkbox","_extends","key","includes","passRest","i18nOptions","lfLog"],"sourceRoot":""}