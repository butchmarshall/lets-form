{"version":3,"file":"898-bfbc1d187e798554e9bb.js","mappings":"kmBASA,IAAMA,GAAkBC,EAAAA,EAAAA,KACtB,SAAAC,GAiBM,IAhBJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAKL,EAALK,MACAC,EAASN,EAATM,UACAC,EAAYP,EAAZO,aACAC,EAAaR,EAAbQ,cACAC,EAAaT,EAAbS,cACAC,EAAMV,EAANU,OACAC,EAAIX,EAAJW,KACAC,EAAQZ,EAARY,SACAC,EAAKb,EAALa,MACWC,GAAAd,EAAXe,YAAWf,EACXgB,UAAAA,OAAQ,IAAAF,GAAQA,EACbG,E,kXAAIC,CAAAlB,EAAAmB,GAEDC,GAAeC,EAAAA,EAAAA,cACnB,SAACC,GAAK,OAAKV,EAASU,EAAMC,cAAcC,QAAQ,GAChD,CAACZ,IAGH,OACEa,IAAAA,cAACC,EAAAA,SAAQC,EAAA,CACPC,UAAU,sBACV,qBAAoB3B,EACpBI,MAAOA,EACPE,aAAcA,EACdiB,QAASpB,EACTE,UAAWA,EACXE,cAAeA,EACfC,cAAeA,EACfR,KAAMA,EACNU,KAAMA,EACND,OAAQA,EACRE,SAAUQ,EACVlB,MAAOA,EACPa,YAAaZ,EACbU,MAAOgB,IAAWhB,GAASA,OAAQiB,EACnCC,kBAAmB,CAAC,QAAS,QAAS,cAAe,SACrDf,SAAUA,IACNgB,EAAAA,EAAAA,IAASf,IAGnB,GACA,CAAC,QAAS,OAAQ,iBAEpBgB,EAAAA,EAAAA,GAAM,2BAEN,W","sources":["webpack:///./react-mantine/checkbox/index.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { Checkbox } from '@mantine/core';\nimport _ from 'lodash';\n\nimport { I18N } from '../../components';\nimport { TextOrIcon } from '../../common';\nimport { passRest, makeWidthStyle } from '../../helpers';\nimport { lfLog } from '../../helpers/lf-log';\n\nconst MantineCheckbox = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    color, \n    iconColor,\n    autoContrast,\n    indeterminate,\n    labelPosition,\n    radius,\n    size,\n    onChange,\n    error,\n    description,\n    disabled = false,\n    ...rest\n  }) => {    \n    const handleChange = useCallback(\n      (event) => onChange(event.currentTarget.checked),\n      [onChange]\n    );\n\n    return (      \n      <Checkbox \n        className=\"lf-control-checkbox\"\n        data-lf-field-name={name}\n        color={color}\n        autoContrast={autoContrast}\n        checked={value}\n        iconColor={iconColor}\n        indeterminate={indeterminate}\n        labelPosition={labelPosition}\n        name={name}\n        size={size}\n        radius={radius}\n        onChange={handleChange}\n        label={label} \n        description={hint}         \n        error={_.isString(error) ? error : undefined }\n        inputWrapperOrder={['label', 'input', 'description', 'error']}\n        disabled={disabled}\n        {...passRest(rest)}\n      />\n    ); \n  },\n  ['label', 'hint', 'placeholder']\n);\nlfLog('Loaded Mantine.Checkbox');\n\nexport default MantineCheckbox;\n"],"names":["MantineCheckbox","I18N","_ref","name","label","hint","value","color","iconColor","autoContrast","indeterminate","labelPosition","radius","size","onChange","error","_ref$disabled","description","disabled","rest","_objectWithoutProperties","_excluded","handleChange","useCallback","event","currentTarget","checked","React","Checkbox","_extends","className","_isString","undefined","inputWrapperOrder","passRest","lfLog"],"sourceRoot":""}