{"version":3,"file":"996-1e4f8a784cbc62974cd2.js","mappings":"41BAWA,IAAMA,GAAgBC,EAAAA,EAAAA,KACpB,SAAAC,GAqCM,IApCJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAIL,EAAJK,KACAC,EAAWN,EAAXM,YACeC,GADJP,EACXQ,QAAeR,EACfS,UAAAA,OAAQ,IAAAF,GAAQA,EAAAG,EAAAV,EAChBW,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAZ,EAChBa,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAd,EAChBe,cAAAA,OAAa,IAAAD,GAAQA,EACrBE,EAAOhB,EAAPgB,QACAC,EAAKjB,EAALiB,MACAC,EAAMlB,EAANkB,OACAC,EAAOnB,EAAPmB,QACAC,EAAQpB,EAARoB,SACAC,EAAMrB,EAANqB,OACAC,EAAStB,EAATsB,UACAC,EAAKvB,EAALuB,MAKAC,GAJYxB,EAAZyB,aACSzB,EAAT0B,UACS1B,EAAT2B,UAAS3B,EACT4B,OACO5B,EAAPwB,SACAK,EAAW7B,EAAX6B,YACAC,EAAS9B,EAAT8B,UAASC,EAAA/B,EACTgC,UAAAA,OAAS,IAAAD,EAAG,WAAO,EAACA,EACpBE,EAAMjC,EAANiC,OACAC,EAAOlC,EAAPkC,QACAC,EAAanC,EAAbmC,cACAC,EAASpC,EAAToC,UACAC,EAAqBrC,EAArBqC,sBACAC,EAAatC,EAAbsC,cACAC,EAAcvC,EAAduC,eACAC,EAAiBxC,EAAjBwC,kBACGC,E,kXAAIC,CAAA1C,EAAA2C,GAEDC,GAAcC,EAAAA,EAAAA,cAAY,SAAAC,GAAC,OAAkB,KAAdA,EAAEC,SAAkBf,GAAW,GAAE,CAACA,IAEvE,OACEgB,IAAAA,cAACC,EAAAA,MAAAA,QAAa,CACZC,UAAU,oBACV,qBAAoBjD,EACpBkD,OAAOC,EAAAA,EAAAA,IAAe9B,EAAWC,GACjCrB,MAAOA,EACPmD,YAAalD,EACbc,MAAOqC,IAAWrC,GAASA,OAAQsC,EACnC1C,SAAUA,EACV2C,kBAAmB,CAAC,QAAS,QAAS,cAAe,UAErDR,IAAAA,cAACS,EAAAA,OAAMC,EAAA,CACLpD,YAAaA,EACbc,SAAUA,EACVC,OAAQA,EACRsC,QAAS5C,EAAgB6B,OAAcW,EACvC9C,SAAUA,EACVO,QAASA,EACTZ,MAAOA,EACPH,KAAMA,EACNI,KAAMA,EACNuD,MAAMC,EAAAA,EAAAA,IAAcrC,EAASK,EAAaC,IAAc,GACxDG,OAAQA,EACRC,QAASA,EACTvB,SAAUA,EACVmD,YAAa5C,GAAU8B,IAAAA,cAAA,OAAKE,UAAU,sBAAqBa,EAAAA,EAAAA,IAAW7C,IACtE8C,aAAc9C,GAAU8B,IAAAA,cAAA,OAAKE,UAAU,sBAAqBa,EAAAA,EAAAA,IAAW5C,IACvEgB,cAAeA,EACfC,UAAWA,EACXC,sBAAuBA,EACvBC,cAAeA,EACfC,eAAgBA,EAChBC,kBAAmBA,IACfyB,EAAAA,EAAAA,IAASxB,KAIrB,GACA,CAAC,QAAS,OAAQ,eAClB,CACEjB,QAAS0C,EAAAA,MAGbC,EAAAA,EAAAA,GAAM,yBAEN,W","sources":["webpack:///./react-mantine/select/index.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { Select, Input } from '@mantine/core';\nimport _ from 'lodash';\n\nimport { I18N } from '../../components';\nimport { TextOrIcon } from '../../common';\nimport { passRest, makeWidthStyle, i18nOptions, filterOptions } from '../../helpers';\nimport { lfLog } from '../../helpers/lf-log';\n\n// TODO filter done with proper params\n\nconst MantineSelect = I18N(\n  ({\n    name,\n    label,\n    hint,\n    value,\n    size,\n    placeholder,\n    tooltip = false,\n    disabled = false,\n    readOnly = false,\n    required = false,\n    submitOnEnter = false,\n    pointer,\n    error,\n    prefix,\n    postfix,\n    onChange,\n    onBlur,\n    fullWidth,\n    width,\n    autocomplete,\n    inputMode,\n    inputType,\n    inside = false,\n    options,\n    filterValue,\n    filterKey,\n    lfOnEnter = () => {},\n    radius,\n    variant,\n    allowDeselect,\n    clearable,\n    defaultDropdownOpened,\n    withCheckIcon,\n    withScrollArea,\n    checkIconPosition,\n    ...rest\n  }) => {\n    const handleKeyUp = useCallback(e => e.keyCode === 13 && lfOnEnter(), [lfOnEnter]);\n\n    return (\n      <Input.Wrapper \n        className=\"lf-control-select\"\n        data-lf-field-name={name}\n        style={makeWidthStyle(fullWidth, width)}\n        label={label} \n        description={hint} \n        error={_.isString(error) ? error : undefined }\n        required={required}\n        inputWrapperOrder={['label', 'input', 'description', 'error']}\n      >\n        <Select \n          placeholder={placeholder}\n          onChange={onChange}\n          onBlur={onBlur}\n          onKeyUp={submitOnEnter ? handleKeyUp : undefined}\n          disabled={disabled}\n          pointer={pointer}\n          value={value}\n          name={name}\n          size={size}\n          data={filterOptions(options, filterValue, filterKey) || []}\n          radius={radius}\n          variant={variant}\n          readOnly={readOnly}\n          leftSection={prefix && <div className=\"lf-prefix-wrapper\">{TextOrIcon(prefix)}</div>}\n          rightSection={prefix && <div className=\"lf-prefix-wrapper\">{TextOrIcon(postfix)}</div>}\n          allowDeselect={allowDeselect}\n          clearable={clearable}\n          defaultDropdownOpened={defaultDropdownOpened}\n          withCheckIcon={withCheckIcon}\n          withScrollArea={withScrollArea}\n          checkIconPosition={checkIconPosition}\n          {...passRest(rest)}\n        />\n      </Input.Wrapper>\n    ); \n  },\n  ['label', 'hint', 'placeholder'],\n  {\n    options: i18nOptions\n  }\n);\nlfLog('Loaded Mantine.Select');\n\nexport default MantineSelect;\n"],"names":["MantineSelect","I18N","_ref","name","label","hint","value","size","placeholder","_ref$disabled","tooltip","disabled","_ref$readOnly","readOnly","_ref$required","required","_ref$submitOnEnter","submitOnEnter","pointer","error","prefix","postfix","onChange","onBlur","fullWidth","width","options","autocomplete","inputMode","inputType","inside","filterValue","filterKey","_ref$lfOnEnter","lfOnEnter","radius","variant","allowDeselect","clearable","defaultDropdownOpened","withCheckIcon","withScrollArea","checkIconPosition","rest","_objectWithoutProperties","_excluded","handleKeyUp","useCallback","e","keyCode","React","Input","className","style","makeWidthStyle","description","_isString","undefined","inputWrapperOrder","Select","_extends","onKeyUp","data","filterOptions","leftSection","TextOrIcon","rightSection","passRest","i18nOptions","lfLog"],"sourceRoot":""}