{"version":3,"file":"520-7b1a0453a937152316e0.js","mappings":"o9CAYA,IAAMA,GAAYC,EAAAA,EAAAA,KAChB,SAAAC,GAoBM,IAnBJC,EAAID,EAAJC,KACAC,EAAKF,EAALE,MACAC,EAAKH,EAALG,MAAKC,EAAAJ,EACLK,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAQN,EAARM,SACAC,EAAKP,EAALO,MACAC,EAAQR,EAARQ,SACAC,EAAIT,EAAJS,KACAC,EAAiBV,EAAjBU,kBACAC,EAAMX,EAANW,OACAC,EAAKZ,EAALY,MACAC,EAAGb,EAAHa,IACAC,EAAGd,EAAHc,IACAC,EAAIf,EAAJe,KACAC,EAAIhB,EAAJgB,KACAC,EAASjB,EAATiB,UACAC,EAAWlB,EAAXkB,YACAC,EAAKnB,EAALmB,MACAC,EAASpB,EAAToB,UAEMC,GAAeC,EAAAA,EAAAA,cACnB,SAAAC,GACEf,EAASe,EAAEC,OAAOrB,MACpB,GACA,CAACK,IAGH,OACEiB,IAAAA,cAAA,OACEC,UAAU,oBACV,qBAAoBzB,GAEpBwB,IAAAA,cAACE,IAAW,CACVrB,SAAUA,EACVM,MAAgB,MAATA,EACPQ,UAAWA,EACXQ,GAAI,CAAEC,GAAI,IAET3B,GAASuB,IAAAA,cAACK,IAAS,KAAE5B,GACtBuB,IAAAA,cAACM,IAAM,CACL9B,KAAMA,EACN+B,MAAOd,GAA4BD,EACnCd,MAAOA,EACPK,SAAUa,EACVhB,SAAUA,EACVM,OAAQA,EACRJ,MAAOA,EACP0B,MAAOC,IAAWf,KAAWC,EAAY,CAAED,MAAO,GAAFgB,OAAKC,SAASjB,EAAO,IAAG,YAASkB,EACjFxB,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACNN,KAAMA,EACNC,kBAAmBA,IAEpBM,IAASJ,GAASa,IAAAA,cAACa,IAAc,KAAEtB,GACnCJ,GAASa,IAAAA,cAACa,IAAc,KAAE1B,IAInC,GACA,CAAC,QAAS,QACV,CACEM,YAAa,SAACf,EAAOoC,GACnB,OAAQC,MAAMC,QAAQtC,GAASA,EAAQ,IAAIuC,KAAI,SAAAvC,GAAK,OAAAwC,EAAAA,EAAA,GAAUxC,GAAK,IAAED,MAAOqC,EAAKpC,EAAMD,QAAM,GAC/F,KAGJ0C,EAAAA,EAAAA,GAAM,qBAEN,W","sources":["webpack:///./react-material-ui/slider/index.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport _ from 'lodash';\nimport Slider from '@mui/material/Slider';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport { I18N } from '../../components';\nimport { lfLog } from '../../helpers/lf-log';\n\n// DOCS: https://mui.com/material-ui/api/slider/\n\nconst SliderMui = I18N(\n  ({\n    name,\n    label,\n    value,\n    disabled = false,\n    required,\n    color,\n    onChange,\n    size,\n    valueLabelDisplay,\n    onBlur,\n    error,\n    min,\n    max,\n    step,\n    hint,\n    showMarks,\n    customMarks,\n    width,\n    fullWidth\n  }) => {\n    const handleChange = useCallback(\n      e => {\n        onChange(e.target.value);\n      },\n      [onChange]\n    );\n\n    return (\n      <div\n        className=\"lf-control-slider\"\n        data-lf-field-name={name}\n      >\n        <FormControl\n          required={required}\n          error={error != null}\n          fullWidth={fullWidth}\n          sx={{ mt: 2 }}\n        >\n          {label && <FormLabel>{label}</FormLabel>}\n          <Slider\n            name={name}\n            marks={customMarks ? customMarks : showMarks}\n            value={value}\n            onChange={handleChange}\n            disabled={disabled}\n            onBlur={onBlur}\n            color={color}\n            style={_.isNumber(width) && !fullWidth ? { width: `${parseInt(width, 10)}px` } : undefined}\n            min={min}\n            max={max}\n            step={step}\n            size={size}\n            valueLabelDisplay={valueLabelDisplay}\n          />\n          {hint && !error && <FormHelperText>{hint}</FormHelperText>}\n          {error && <FormHelperText>{error}</FormHelperText>}\n        </FormControl>\n      </div>\n    );\n  },\n  ['label', 'hint'],\n  {\n    customMarks: (value, i18n) => {\n      return (Array.isArray(value) ? value : []).map(value => ({ ...value, label: i18n(value.label) }))\n    }\n  }\n);\nlfLog('Loaded MUI.Slider');\n\nexport default SliderMui;"],"names":["SliderMui","I18N","_ref","name","label","value","_ref$disabled","disabled","required","color","onChange","size","valueLabelDisplay","onBlur","error","min","max","step","hint","showMarks","customMarks","width","fullWidth","handleChange","useCallback","e","target","React","className","FormControl","sx","mt","FormLabel","Slider","marks","style","_isNumber","concat","parseInt","undefined","FormHelperText","i18n","Array","isArray","map","_objectSpread","lfLog"],"sourceRoot":""}